{"version":3,"sources":["../../../../../lib/xlsx/xform/comment/comments-xform.js"],"names":["XmlStream","require","utils","BaseXform","CommentXform","CommentsXform","module","exports","map","comment","inherits","COMMENTS_ATTRIBUTES","xmlns","render","xmlStream","model","openXml","StdDocAttributes","openNode","leafNode","closeNode","comments","forEach","parseOpen","node","parser","name","parseText","text","parseClose","push","undefined"],"mappings":";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,2BAAD,CAAzB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAMG,YAAY,GAAGH,OAAO,CAAC,iBAAD,CAA5B;;AAEA,IAAMI,aAAa,GAAIC,MAAM,CAACC,OAAP,GAAiB,YAAW;AACjD,OAAKC,GAAL,GAAW;AACTC,IAAAA,OAAO,EAAE,IAAIL,YAAJ;AADA,GAAX;AAGD,CAJD;;AAMAF,KAAK,CAACQ,QAAN,CACEL,aADF,EAEEF,SAFF,EAGE;AACEQ,EAAAA,mBAAmB,EAAE;AACnBC,IAAAA,KAAK,EAAE;AADY;AADvB,CAHF,EAQE;AACEC,EAAAA,MADF,kBACSC,SADT,EACoBC,KADpB,EAC2B;AAAA;;AACvBA,IAAAA,KAAK,GAAGA,KAAK,IAAI,KAAKA,KAAtB;AACAD,IAAAA,SAAS,CAACE,OAAV,CAAkBhB,SAAS,CAACiB,gBAA5B;AACAH,IAAAA,SAAS,CAACI,QAAV,CAAmB,UAAnB,EAA+Bb,aAAa,CAACM,mBAA7C,EAHuB,CAKvB;AACA;;AACAG,IAAAA,SAAS,CAACI,QAAV,CAAmB,SAAnB;AACAJ,IAAAA,SAAS,CAACK,QAAV,CAAmB,QAAnB,EAA6B,IAA7B,EAAmC,QAAnC;AACAL,IAAAA,SAAS,CAACM,SAAV,GATuB,CAWvB;;AACAN,IAAAA,SAAS,CAACI,QAAV,CAAmB,aAAnB;AACAH,IAAAA,KAAK,CAACM,QAAN,CAAeC,OAAf,CAAuB,UAAAb,OAAO,EAAI;AAChC,MAAA,KAAI,CAACD,GAAL,CAASC,OAAT,CAAiBI,MAAjB,CAAwBC,SAAxB,EAAmCL,OAAnC;AACD,KAFD;AAGAK,IAAAA,SAAS,CAACM,SAAV;AACAN,IAAAA,SAAS,CAACM,SAAV;AACD,GAnBH;AAqBEG,EAAAA,SArBF,qBAqBYC,IArBZ,EAqBkB;AACd,QAAI,KAAKC,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYF,SAAZ,CAAsBC,IAAtB;AACA,aAAO,IAAP;AACD;;AACD,YAAQA,IAAI,CAACE,IAAb;AACE,WAAK,aAAL;AACE,aAAKX,KAAL,GAAa;AACXM,UAAAA,QAAQ,EAAE;AADC,SAAb;AAGA,eAAO,IAAP;;AACF,WAAK,SAAL;AACE,aAAKI,MAAL,GAAc,KAAKjB,GAAL,CAASC,OAAvB;AACA,aAAKgB,MAAL,CAAYF,SAAZ,CAAsBC,IAAtB;AACA,eAAO,IAAP;;AACF;AACE,eAAO,KAAP;AAXJ;AAaD,GAvCH;AAwCEG,EAAAA,SAxCF,qBAwCYC,IAxCZ,EAwCkB;AACd,QAAI,KAAKH,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYE,SAAZ,CAAsBC,IAAtB;AACD;AACF,GA5CH;AA6CEC,EAAAA,UA7CF,sBA6CaH,IA7Cb,EA6CmB;AACf,YAAQA,IAAR;AACE,WAAK,aAAL;AACE,eAAO,KAAP;;AACF,WAAK,SAAL;AACE,aAAKX,KAAL,CAAWM,QAAX,CAAoBS,IAApB,CAAyB,KAAKL,MAAL,CAAYV,KAArC;AACA,aAAKU,MAAL,GAAcM,SAAd;AACA,eAAO,IAAP;;AACF;AACE,YAAI,KAAKN,MAAT,EAAiB;AACf,eAAKA,MAAL,CAAYI,UAAZ,CAAuBH,IAAvB;AACD;;AACD,eAAO,IAAP;AAXJ;AAaD;AA3DH,CARF","sourcesContent":["const XmlStream = require('../../../utils/xml-stream');\r\nconst utils = require('../../../utils/utils');\r\nconst BaseXform = require('../base-xform');\r\n\r\nconst CommentXform = require('./comment-xform');\r\n\r\nconst CommentsXform = (module.exports = function() {\r\n  this.map = {\r\n    comment: new CommentXform(),\r\n  };\r\n});\r\n\r\nutils.inherits(\r\n  CommentsXform,\r\n  BaseXform,\r\n  {\r\n    COMMENTS_ATTRIBUTES: {\r\n      xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\r\n    },\r\n  },\r\n  {\r\n    render(xmlStream, model) {\r\n      model = model || this.model;\r\n      xmlStream.openXml(XmlStream.StdDocAttributes);\r\n      xmlStream.openNode('comments', CommentsXform.COMMENTS_ATTRIBUTES);\r\n\r\n      // authors\r\n      // TODO: support authors properly\r\n      xmlStream.openNode('authors');\r\n      xmlStream.leafNode('author', null, 'Author');\r\n      xmlStream.closeNode();\r\n\r\n      // comments\r\n      xmlStream.openNode('commentList');\r\n      model.comments.forEach(comment => {\r\n        this.map.comment.render(xmlStream, comment);\r\n      });\r\n      xmlStream.closeNode();\r\n      xmlStream.closeNode();\r\n    },\r\n\r\n    parseOpen(node) {\r\n      if (this.parser) {\r\n        this.parser.parseOpen(node);\r\n        return true;\r\n      }\r\n      switch (node.name) {\r\n        case 'commentList':\r\n          this.model = {\r\n            comments: [],\r\n          };\r\n          return true;\r\n        case 'comment':\r\n          this.parser = this.map.comment;\r\n          this.parser.parseOpen(node);\r\n          return true;\r\n        default:\r\n          return false;\r\n      }\r\n    },\r\n    parseText(text) {\r\n      if (this.parser) {\r\n        this.parser.parseText(text);\r\n      }\r\n    },\r\n    parseClose(name) {\r\n      switch (name) {\r\n        case 'commentList':\r\n          return false;\r\n        case 'comment':\r\n          this.model.comments.push(this.parser.model);\r\n          this.parser = undefined;\r\n          return true;\r\n        default:\r\n          if (this.parser) {\r\n            this.parser.parseClose(name);\r\n          }\r\n          return true;\r\n      }\r\n    },\r\n  }\r\n);\r\n"],"file":"comments-xform.js"}