{"version":3,"sources":["../../../../../lib/xlsx/xform/book/workbook-xform.js"],"names":["_","require","colCache","XmlStream","BaseXform","StaticXform","ListXform","DefinedNameXform","SheetXform","WorkbookViewXform","WorkbookPropertiesXform","WorkbookCalcPropertiesXform","WorkbookXform","map","fileVersion","STATIC_XFORMS","workbookPr","bookViews","tag","count","childXform","sheets","definedNames","calcPr","model","worksheets","printAreas","index","forEach","sheet","pageSetup","printArea","split","printAreaComponents","definedName","name","ranges","localSheetId","push","printTitlesRow","printTitlesColumn","titlesColumns","titlesRows","length","concat","media","medium","i","type","xmlStream","openXml","StdDocAttributes","openNode","WORKBOOK_ATTRIBUTES","render","properties","views","calcProperties","closeNode","node","parser","parseOpen","text","parseText","parseClose","undefined","rels","workbookRels","reduce","rel","Id","worksheet","rId","worksheetHash","Target","replace","id","state","each","range","decodeEx","dimensions","rangeString","join","dollarRegex","rowRangeRegex","rowRangeMatches","match","columnRangeRegex","columnRangeMatches","xmlns","$","appName","lastEdited","lowestEdited","rupBuild","module","exports"],"mappings":"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","sourcesContent":["const _ = require('../../../utils/under-dash');\r\n\r\nconst colCache = require('../../../utils/col-cache');\r\nconst XmlStream = require('../../../utils/xml-stream');\r\n\r\nconst BaseXform = require('../base-xform');\r\nconst StaticXform = require('../static-xform');\r\nconst ListXform = require('../list-xform');\r\nconst DefinedNameXform = require('./defined-name-xform');\r\nconst SheetXform = require('./sheet-xform');\r\nconst WorkbookViewXform = require('./workbook-view-xform');\r\nconst WorkbookPropertiesXform = require('./workbook-properties-xform');\r\nconst WorkbookCalcPropertiesXform = require('./workbook-calc-properties-xform');\r\n\r\nclass WorkbookXform extends BaseXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      fileVersion: WorkbookXform.STATIC_XFORMS.fileVersion,\r\n      workbookPr: new WorkbookPropertiesXform(),\r\n      bookViews: new ListXform({\r\n        tag: 'bookViews',\r\n        count: false,\r\n        childXform: new WorkbookViewXform(),\r\n      }),\r\n      sheets: new ListXform({tag: 'sheets', count: false, childXform: new SheetXform()}),\r\n      definedNames: new ListXform({\r\n        tag: 'definedNames',\r\n        count: false,\r\n        childXform: new DefinedNameXform(),\r\n      }),\r\n      calcPr: new WorkbookCalcPropertiesXform(),\r\n    };\r\n  }\r\n\r\n  prepare(model) {\r\n    model.sheets = model.worksheets;\r\n\r\n    // collate all the print areas from all of the sheets and add them to the defined names\r\n    const printAreas = [];\r\n    let index = 0; // sheets is sparse array - calc index manually\r\n    model.sheets.forEach(sheet => {\r\n      if (sheet.pageSetup && sheet.pageSetup.printArea) {\r\n        sheet.pageSetup.printArea.split('&&').forEach(printArea => {\r\n          const printAreaComponents = printArea.split(':');\r\n          const definedName = {\r\n            name: '_xlnm.Print_Area',\r\n            ranges: [`'${sheet.name}'!$${printAreaComponents[0]}:$${printAreaComponents[1]}`],\r\n            localSheetId: index,\r\n          };\r\n          printAreas.push(definedName);\r\n        });\r\n      }\r\n\r\n      if (\r\n        sheet.pageSetup &&\r\n        (sheet.pageSetup.printTitlesRow || sheet.pageSetup.printTitlesColumn)\r\n      ) {\r\n        const ranges = [];\r\n\r\n        if (sheet.pageSetup.printTitlesColumn) {\r\n          const titlesColumns = sheet.pageSetup.printTitlesColumn.split(':');\r\n          ranges.push(`'${sheet.name}'!$${titlesColumns[0]}:$${titlesColumns[1]}`);\r\n        }\r\n\r\n        if (sheet.pageSetup.printTitlesRow) {\r\n          const titlesRows = sheet.pageSetup.printTitlesRow.split(':');\r\n          ranges.push(`'${sheet.name}'!$${titlesRows[0]}:$${titlesRows[1]}`);\r\n        }\r\n\r\n        const definedName = {\r\n          name: '_xlnm.Print_Titles',\r\n          ranges,\r\n          localSheetId: index,\r\n        };\r\n\r\n        printAreas.push(definedName);\r\n      }\r\n      index++;\r\n    });\r\n    if (printAreas.length) {\r\n      model.definedNames = model.definedNames.concat(printAreas);\r\n    }\r\n\r\n    (model.media || []).forEach((medium, i) => {\r\n      // assign name\r\n      medium.name = medium.type + (i + 1);\r\n    });\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openXml(XmlStream.StdDocAttributes);\r\n    xmlStream.openNode('workbook', WorkbookXform.WORKBOOK_ATTRIBUTES);\r\n\r\n    this.map.fileVersion.render(xmlStream);\r\n    this.map.workbookPr.render(xmlStream, model.properties);\r\n    this.map.bookViews.render(xmlStream, model.views);\r\n    this.map.sheets.render(xmlStream, model.sheets);\r\n    this.map.definedNames.render(xmlStream, model.definedNames);\r\n    this.map.calcPr.render(xmlStream, model.calcProperties);\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case 'workbook':\r\n        return true;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        return true;\r\n    }\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case 'workbook':\r\n        this.model = {\r\n          sheets: this.map.sheets.model,\r\n          properties: this.map.workbookPr.model || {},\r\n          views: this.map.bookViews.model,\r\n          calcProperties: {},\r\n        };\r\n        if (this.map.definedNames.model) {\r\n          this.model.definedNames = this.map.definedNames.model;\r\n        }\r\n\r\n        return false;\r\n      default:\r\n        // not quite sure how we get here!\r\n        return true;\r\n    }\r\n  }\r\n\r\n  reconcile(model) {\r\n    const rels = (model.workbookRels || []).reduce((map, rel) => {\r\n      map[rel.Id] = rel;\r\n      return map;\r\n    }, {});\r\n\r\n    // reconcile sheet ids, rIds and names\r\n    const worksheets = [];\r\n    let worksheet;\r\n    let index = 0;\r\n\r\n    (model.sheets || []).forEach(sheet => {\r\n      const rel = rels[sheet.rId];\r\n      if (!rel) {\r\n        return;\r\n      }\r\n      // if rel.Target start with `[space]/xl/` or `/xl/` , then it will be replaced with `''` and spliced behind `xl/`,\r\n      // otherwise it will be spliced directly behind `xl/`. i.g.\r\n      worksheet = model.worksheetHash[`xl/${rel.Target.replace(/^(\\s|\\/xl\\/)+/, '')}`];\r\n      // If there are \"chartsheets\" in the file, rel.Target will\r\n      // come out as chartsheets/sheet1.xml or similar here, and\r\n      // that won't be in model.worksheetHash.\r\n      // As we don't have the infrastructure to support chartsheets,\r\n      // we will ignore them for now:\r\n      if (worksheet) {\r\n        worksheet.name = sheet.name;\r\n        worksheet.id = sheet.id;\r\n        worksheet.state = sheet.state;\r\n        worksheets[index++] = worksheet;\r\n      }\r\n    });\r\n\r\n    // reconcile print areas\r\n    const definedNames = [];\r\n    _.each(model.definedNames, definedName => {\r\n      if (definedName.name === '_xlnm.Print_Area') {\r\n        worksheet = worksheets[definedName.localSheetId];\r\n        if (worksheet) {\r\n          if (!worksheet.pageSetup) {\r\n            worksheet.pageSetup = {};\r\n          }\r\n          const range = colCache.decodeEx(definedName.ranges[0]);\r\n          worksheet.pageSetup.printArea = worksheet.pageSetup.printArea\r\n            ? `${worksheet.pageSetup.printArea}&&${range.dimensions}`\r\n            : range.dimensions;\r\n        }\r\n      } else if (definedName.name === '_xlnm.Print_Titles') {\r\n        worksheet = worksheets[definedName.localSheetId];\r\n        if (worksheet) {\r\n          if (!worksheet.pageSetup) {\r\n            worksheet.pageSetup = {};\r\n          }\r\n\r\n          const rangeString = definedName.ranges.join(',');\r\n\r\n          const dollarRegex = /\\$/g;\r\n\r\n          const rowRangeRegex = /\\$\\d+:\\$\\d+/;\r\n          const rowRangeMatches = rangeString.match(rowRangeRegex);\r\n\r\n          if (rowRangeMatches && rowRangeMatches.length) {\r\n            const range = rowRangeMatches[0];\r\n            worksheet.pageSetup.printTitlesRow = range.replace(dollarRegex, '');\r\n          }\r\n\r\n          const columnRangeRegex = /\\$[A-Z]+:\\$[A-Z]+/;\r\n          const columnRangeMatches = rangeString.match(columnRangeRegex);\r\n\r\n          if (columnRangeMatches && columnRangeMatches.length) {\r\n            const range = columnRangeMatches[0];\r\n            worksheet.pageSetup.printTitlesColumn = range.replace(dollarRegex, '');\r\n          }\r\n        }\r\n      } else {\r\n        definedNames.push(definedName);\r\n      }\r\n    });\r\n    model.definedNames = definedNames;\r\n\r\n    // used by sheets to build their image models\r\n    model.media.forEach((media, i) => {\r\n      media.index = i;\r\n    });\r\n  }\r\n}\r\n\r\nWorkbookXform.WORKBOOK_ATTRIBUTES = {\r\n  xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\r\n  'xmlns:r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\r\n  'xmlns:mc': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\r\n  'mc:Ignorable': 'x15',\r\n  'xmlns:x15': 'http://schemas.microsoft.com/office/spreadsheetml/2010/11/main',\r\n};\r\nWorkbookXform.STATIC_XFORMS = {\r\n  fileVersion: new StaticXform({\r\n    tag: 'fileVersion',\r\n    $: {appName: 'xl', lastEdited: 5, lowestEdited: 5, rupBuild: 9303},\r\n  }),\r\n};\r\n\r\nmodule.exports = WorkbookXform;\r\n"],"file":"workbook-xform.js"}