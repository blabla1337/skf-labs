{"version":3,"sources":["../../../../../lib/xlsx/xform/style/alignment-xform.js"],"names":["Enums","require","utils","BaseXform","validation","horizontalValues","reduce","p","v","horizontal","value","undefined","verticalValues","vertical","wrapText","shrinkToFit","textRotation","validInt","indent","Math","max","readingOrder","ReadingOrder","LeftToRight","RightToLeft","textRotationXform","toXml","tr","round","toModel","AlignmentXform","xmlStream","model","addRollback","openNode","isValid","add","name","addAttribute","closeNode","commit","rollback","node","valid","truthy","attributes","parseInt","module","exports"],"mappings":"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","sourcesContent":["const Enums = require('../../../doc/enums');\r\n\r\nconst utils = require('../../../utils/utils');\r\nconst BaseXform = require('../base-xform');\r\n\r\nconst validation = {\r\n  horizontalValues: [\r\n    'left',\r\n    'center',\r\n    'right',\r\n    'fill',\r\n    'centerContinuous',\r\n    'distributed',\r\n    'justify',\r\n  ].reduce((p, v) => {\r\n    p[v] = true;\r\n    return p;\r\n  }, {}),\r\n  horizontal(value) {\r\n    return this.horizontalValues[value] ? value : undefined;\r\n  },\r\n\r\n  verticalValues: ['top', 'middle', 'bottom', 'distributed', 'justify'].reduce((p, v) => {\r\n    p[v] = true;\r\n    return p;\r\n  }, {}),\r\n  vertical(value) {\r\n    if (value === 'middle') return 'center';\r\n    return this.verticalValues[value] ? value : undefined;\r\n  },\r\n  wrapText(value) {\r\n    return value ? true : undefined;\r\n  },\r\n  shrinkToFit(value) {\r\n    return value ? true : undefined;\r\n  },\r\n  textRotation(value) {\r\n    switch (value) {\r\n      case 'vertical':\r\n        return value;\r\n      default:\r\n        value = utils.validInt(value);\r\n        return value >= -90 && value <= 90 ? value : undefined;\r\n    }\r\n  },\r\n  indent(value) {\r\n    value = utils.validInt(value);\r\n    return Math.max(0, value);\r\n  },\r\n  readingOrder(value) {\r\n    switch (value) {\r\n      case 'ltr':\r\n        return Enums.ReadingOrder.LeftToRight;\r\n      case 'rtl':\r\n        return Enums.ReadingOrder.RightToLeft;\r\n      default:\r\n        return undefined;\r\n    }\r\n  },\r\n};\r\n\r\nconst textRotationXform = {\r\n  toXml(textRotation) {\r\n    textRotation = validation.textRotation(textRotation);\r\n    if (textRotation) {\r\n      if (textRotation === 'vertical') {\r\n        return 255;\r\n      }\r\n\r\n      const tr = Math.round(textRotation);\r\n      if (tr >= 0 && tr <= 90) {\r\n        return tr;\r\n      }\r\n\r\n      if (tr < 0 && tr >= -90) {\r\n        return 90 - tr;\r\n      }\r\n    }\r\n    return undefined;\r\n  },\r\n  toModel(textRotation) {\r\n    const tr = utils.validInt(textRotation);\r\n    if (tr !== undefined) {\r\n      if (tr === 255) {\r\n        return 'vertical';\r\n      }\r\n      if (tr >= 0 && tr <= 90) {\r\n        return tr;\r\n      }\r\n      if (tr > 90 && tr <= 180) {\r\n        return 90 - tr;\r\n      }\r\n    }\r\n    return undefined;\r\n  },\r\n};\r\n\r\n// Alignment encapsulates translation from style.alignment model to/from xlsx\r\nclass AlignmentXform extends BaseXform {\r\n  get tag() {\r\n    return 'alignment';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.addRollback();\r\n    xmlStream.openNode('alignment');\r\n\r\n    let isValid = false;\r\n    function add(name, value) {\r\n      if (value) {\r\n        xmlStream.addAttribute(name, value);\r\n        isValid = true;\r\n      }\r\n    }\r\n    add('horizontal', validation.horizontal(model.horizontal));\r\n    add('vertical', validation.vertical(model.vertical));\r\n    add('wrapText', validation.wrapText(model.wrapText) ? '1' : false);\r\n    add('shrinkToFit', validation.shrinkToFit(model.shrinkToFit) ? '1' : false);\r\n    add('indent', validation.indent(model.indent));\r\n    add('textRotation', textRotationXform.toXml(model.textRotation));\r\n    add('readingOrder', validation.readingOrder(model.readingOrder));\r\n\r\n    xmlStream.closeNode();\r\n\r\n    if (isValid) {\r\n      xmlStream.commit();\r\n    } else {\r\n      xmlStream.rollback();\r\n    }\r\n  }\r\n\r\n  parseOpen(node) {\r\n    const model = {};\r\n\r\n    let valid = false;\r\n    function add(truthy, name, value) {\r\n      if (truthy) {\r\n        model[name] = value;\r\n        valid = true;\r\n      }\r\n    }\r\n    add(node.attributes.horizontal, 'horizontal', node.attributes.horizontal);\r\n    add(\r\n      node.attributes.vertical,\r\n      'vertical',\r\n      node.attributes.vertical === 'center' ? 'middle' : node.attributes.vertical\r\n    );\r\n    add(node.attributes.wrapText, 'wrapText', !!node.attributes.wrapText);\r\n    add(node.attributes.shrinkToFit, 'shrinkToFit', !!node.attributes.shrinkToFit);\r\n    add(node.attributes.indent, 'indent', parseInt(node.attributes.indent, 10));\r\n    add(\r\n      node.attributes.textRotation,\r\n      'textRotation',\r\n      textRotationXform.toModel(node.attributes.textRotation)\r\n    );\r\n    add(\r\n      node.attributes.readingOrder,\r\n      'readingOrder',\r\n      node.attributes.readingOrder === '2' ? 'rtl' : 'ltr'\r\n    );\r\n\r\n    this.model = valid ? model : null;\r\n  }\r\n\r\n  parseText() {}\r\n\r\n  parseClose() {\r\n    return false;\r\n  }\r\n}\r\n\r\nmodule.exports = AlignmentXform;\r\n"],"file":"alignment-xform.js"}