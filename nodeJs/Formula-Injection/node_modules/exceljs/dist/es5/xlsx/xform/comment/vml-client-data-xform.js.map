{"version":3,"sources":["../../../../../lib/xlsx/xform/comment/vml-client-data-xform.js"],"names":["BaseXform","require","VmlAnchorXform","VmlProtectionXform","VmlPositionXform","POSITION_TYPE","VmlClientDataXform","map","tag","xmlStream","model","note","protection","editAs","openNode","ObjectType","render","locked","leafNode","lockText","refAddress","row","col","closeNode","node","name","reset","anchor","parser","parseOpen","text","parseText","parseClose","undefined","normalizeModel","position","Object","assign","len","keys","length","module","exports"],"mappings":"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","sourcesContent":["const BaseXform = require('../base-xform');\r\n\r\nconst VmlAnchorXform = require('./vml-anchor-xform');\r\nconst VmlProtectionXform = require('./style/vml-protection-xform');\r\nconst VmlPositionXform = require('./style/vml-position-xform');\r\n\r\nconst POSITION_TYPE = ['twoCells', 'oneCells', 'absolute'];\r\n\r\nclass VmlClientDataXform extends BaseXform {\r\n  constructor() {\r\n    super();\r\n    this.map = {\r\n      'x:Anchor': new VmlAnchorXform(),\r\n      'x:Locked': new VmlProtectionXform({tag: 'x:Locked'}),\r\n      'x:LockText': new VmlProtectionXform({tag: 'x:LockText'}),\r\n      'x:SizeWithCells': new VmlPositionXform({tag: 'x:SizeWithCells'}),\r\n      'x:MoveWithCells': new VmlPositionXform({tag: 'x:MoveWithCells'}),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return 'x:ClientData';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    const {protection, editAs} = model.note;\r\n    xmlStream.openNode(this.tag, {ObjectType: 'Note'});\r\n    this.map['x:MoveWithCells'].render(xmlStream, editAs, POSITION_TYPE);\r\n    this.map['x:SizeWithCells'].render(xmlStream, editAs, POSITION_TYPE);\r\n    this.map['x:Anchor'].render(xmlStream, model);\r\n    this.map['x:Locked'].render(xmlStream, protection.locked);\r\n    xmlStream.leafNode('x:AutoFill', null, 'False');\r\n    this.map['x:LockText'].render(xmlStream, protection.lockText);\r\n    xmlStream.leafNode('x:Row', null, model.refAddress.row - 1);\r\n    xmlStream.leafNode('x:Column', null, model.refAddress.col - 1);\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    switch (node.name) {\r\n      case this.tag:\r\n        this.reset();\r\n        this.model = {\r\n          anchor: [],\r\n          protection: {},\r\n          editAs: '',\r\n        };\r\n        break;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        break;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case this.tag:\r\n        this.normalizeModel();\r\n        return false;\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n\r\n  normalizeModel() {\r\n    const position = Object.assign(\r\n      {},\r\n      this.map['x:MoveWithCells'].model,\r\n      this.map['x:SizeWithCells'].model\r\n    );\r\n    const len = Object.keys(position).length;\r\n    this.model.editAs = POSITION_TYPE[len];\r\n    this.model.anchor = this.map['x:Anchor'].text;\r\n    this.model.protection.locked = this.map['x:Locked'].text;\r\n    this.model.protection.lockText = this.map['x:LockText'].text;\r\n  }\r\n}\r\n\r\nmodule.exports = VmlClientDataXform;\r\n"],"file":"vml-client-data-xform.js"}