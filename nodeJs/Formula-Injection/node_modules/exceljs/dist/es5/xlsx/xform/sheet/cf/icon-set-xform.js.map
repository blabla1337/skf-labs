{"version":3,"sources":["../../../../../../lib/xlsx/xform/sheet/cf/icon-set-xform.js"],"names":["BaseXform","require","CompositeXform","CfvoXform","IconSetXform","map","cfvo","cfvoXform","xmlStream","model","openNode","tag","iconSet","toStringAttribute","reverse","toBoolAttribute","showValue","forEach","render","closeNode","attributes","toStringValue","toBoolValue","name","parser","push","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMC,cAAc,GAAGD,OAAO,CAAC,uBAAD,CAA9B;;AAEA,IAAME,SAAS,GAAGF,OAAO,CAAC,cAAD,CAAzB;;IAEMG,Y;;;;;AACJ,0BAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,GAAL,GAAW;AACTC,MAAAA,IAAI,EAAG,MAAKC,SAAL,GAAiB,IAAIJ,SAAJ;AADf,KAAX;AAHY;AAMb;;;;2BAMMK,S,EAAWC,K,EAAO;AAAA;;AACvBD,MAAAA,SAAS,CAACE,QAAV,CAAmB,KAAKC,GAAxB,EAA6B;AAC3BC,QAAAA,OAAO,EAAEZ,SAAS,CAACa,iBAAV,CAA4BJ,KAAK,CAACG,OAAlC,EAA2C,gBAA3C,CADkB;AAE3BE,QAAAA,OAAO,EAAEd,SAAS,CAACe,eAAV,CAA0BN,KAAK,CAACK,OAAhC,EAAyC,KAAzC,CAFkB;AAG3BE,QAAAA,SAAS,EAAEhB,SAAS,CAACe,eAAV,CAA0BN,KAAK,CAACO,SAAhC,EAA2C,IAA3C;AAHgB,OAA7B;AAMAP,MAAAA,KAAK,CAACH,IAAN,CAAWW,OAAX,CAAmB,UAAAX,IAAI,EAAI;AACzB,QAAA,MAAI,CAACC,SAAL,CAAeW,MAAf,CAAsBV,SAAtB,EAAiCF,IAAjC;AACD,OAFD;AAIAE,MAAAA,SAAS,CAACW,SAAV;AACD;;;yCAE4B;AAAA,UAAbC,UAAa,QAAbA,UAAa;AAC3B,aAAO;AACLR,QAAAA,OAAO,EAAEZ,SAAS,CAACqB,aAAV,CAAwBD,UAAU,CAACR,OAAnC,EAA4C,gBAA5C,CADJ;AAELE,QAAAA,OAAO,EAAEd,SAAS,CAACsB,WAAV,CAAsBF,UAAU,CAACN,OAAjC,CAFJ;AAGLE,QAAAA,SAAS,EAAEhB,SAAS,CAACsB,WAAV,CAAsBF,UAAU,CAACJ,SAAjC,CAHN;AAILV,QAAAA,IAAI,EAAE;AAJD,OAAP;AAMD;;;kCAEaiB,I,EAAMC,M,EAAQ;AAC1B,WAAKf,KAAL,CAAWc,IAAX,EAAiBE,IAAjB,CAAsBD,MAAM,CAACf,KAA7B;AACD;;;wBA7BS;AACR,aAAO,SAAP;AACD;;;;EAXwBP,c;;AAyC3BwB,MAAM,CAACC,OAAP,GAAiBvB,YAAjB","sourcesContent":["const BaseXform = require('../../base-xform');\r\nconst CompositeXform = require('../../composite-xform');\r\n\r\nconst CfvoXform = require('./cfvo-xform');\r\n\r\nclass IconSetXform extends CompositeXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      cfvo: (this.cfvoXform = new CfvoXform()),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return 'iconSet';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openNode(this.tag, {\r\n      iconSet: BaseXform.toStringAttribute(model.iconSet, '3TrafficLights'),\r\n      reverse: BaseXform.toBoolAttribute(model.reverse, false),\r\n      showValue: BaseXform.toBoolAttribute(model.showValue, true),\r\n    });\r\n\r\n    model.cfvo.forEach(cfvo => {\r\n      this.cfvoXform.render(xmlStream, cfvo);\r\n    });\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  createNewModel({attributes}) {\r\n    return {\r\n      iconSet: BaseXform.toStringValue(attributes.iconSet, '3TrafficLights'),\r\n      reverse: BaseXform.toBoolValue(attributes.reverse),\r\n      showValue: BaseXform.toBoolValue(attributes.showValue),\r\n      cfvo: [],\r\n    };\r\n  }\r\n\r\n  onParserClose(name, parser) {\r\n    this.model[name].push(parser.model);\r\n  }\r\n}\r\n\r\nmodule.exports = IconSetXform;\r\n"],"file":"icon-set-xform.js"}