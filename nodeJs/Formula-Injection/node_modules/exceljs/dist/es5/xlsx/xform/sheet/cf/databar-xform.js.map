{"version":3,"sources":["../../../../../../lib/xlsx/xform/sheet/cf/databar-xform.js"],"names":["CompositeXform","require","ColorXform","CfvoXform","DatabarXform","map","cfvo","cfvoXform","color","colorXform","xmlStream","model","openNode","tag","forEach","render","closeNode","name","parser","push","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,cAAc,GAAGC,OAAO,CAAC,uBAAD,CAA9B;;AAEA,IAAMC,UAAU,GAAGD,OAAO,CAAC,yBAAD,CAA1B;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,cAAD,CAAzB;;IAEMG,Y;;;;;AACJ,0BAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,GAAL,GAAW;AACTC,MAAAA,IAAI,EAAG,MAAKC,SAAL,GAAiB,IAAIJ,SAAJ,EADf;AAETK,MAAAA,KAAK,EAAG,MAAKC,UAAL,GAAkB,IAAIP,UAAJ;AAFjB,KAAX;AAHY;AAOb;;;;2BAMMQ,S,EAAWC,K,EAAO;AAAA;;AACvBD,MAAAA,SAAS,CAACE,QAAV,CAAmB,KAAKC,GAAxB;AAEAF,MAAAA,KAAK,CAACL,IAAN,CAAWQ,OAAX,CAAmB,UAAAR,IAAI,EAAI;AACzB,QAAA,MAAI,CAACC,SAAL,CAAeQ,MAAf,CAAsBL,SAAtB,EAAiCJ,IAAjC;AACD,OAFD;AAGA,WAAKG,UAAL,CAAgBM,MAAhB,CAAuBL,SAAvB,EAAkCC,KAAK,CAACH,KAAxC;AAEAE,MAAAA,SAAS,CAACM,SAAV;AACD;;;qCAEgB;AACf,aAAO;AACLV,QAAAA,IAAI,EAAE;AADD,OAAP;AAGD;;;kCAEaW,I,EAAMC,M,EAAQ;AAC1B,cAAQD,IAAR;AACE,aAAK,MAAL;AACE,eAAKN,KAAL,CAAWL,IAAX,CAAgBa,IAAhB,CAAqBD,MAAM,CAACP,KAA5B;AACA;;AACF,aAAK,OAAL;AACE,eAAKA,KAAL,CAAWH,KAAX,GAAmBU,MAAM,CAACP,KAA1B;AACA;AANJ;AAQD;;;wBA9BS;AACR,aAAO,SAAP;AACD;;;;EAZwBX,c;;AA2C3BoB,MAAM,CAACC,OAAP,GAAiBjB,YAAjB","sourcesContent":["const CompositeXform = require('../../composite-xform');\r\n\r\nconst ColorXform = require('../../style/color-xform');\r\nconst CfvoXform = require('./cfvo-xform');\r\n\r\nclass DatabarXform extends CompositeXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      cfvo: (this.cfvoXform = new CfvoXform()),\r\n      color: (this.colorXform = new ColorXform()),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return 'dataBar';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openNode(this.tag);\r\n\r\n    model.cfvo.forEach(cfvo => {\r\n      this.cfvoXform.render(xmlStream, cfvo);\r\n    });\r\n    this.colorXform.render(xmlStream, model.color);\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  createNewModel() {\r\n    return {\r\n      cfvo: [],\r\n    };\r\n  }\r\n\r\n  onParserClose(name, parser) {\r\n    switch (name) {\r\n      case 'cfvo':\r\n        this.model.cfvo.push(parser.model);\r\n        break;\r\n      case 'color':\r\n        this.model.color = parser.model;\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = DatabarXform;\r\n"],"file":"databar-xform.js"}