{"version":3,"sources":["../../../../../lib/xlsx/xform/drawing/pic-xform.js"],"names":["BaseXform","require","StaticXform","BlipFillXform","NvPicPrXform","spPrJSON","PicXform","map","model","options","index","xmlStream","openNode","tag","render","closeNode","node","parser","parseOpen","name","reset","parseClose","mergeModel","undefined","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,iBAAD,CAA3B;;AAEA,IAAME,aAAa,GAAGF,OAAO,CAAC,mBAAD,CAA7B;;AACA,IAAMG,YAAY,GAAGH,OAAO,CAAC,mBAAD,CAA5B;;AAEA,IAAMI,QAAQ,GAAGJ,OAAO,CAAC,SAAD,CAAxB;;IAEMK,Q;;;;;AACJ,sBAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,GAAL,GAAW;AACT,qBAAe,IAAIH,YAAJ,EADN;AAET,sBAAgB,IAAID,aAAJ,EAFP;AAGT,kBAAY,IAAID,WAAJ,CAAgBG,QAAhB;AAHH,KAAX;AAHY;AAQb;;;;4BAMOG,K,EAAOC,O,EAAS;AACtBD,MAAAA,KAAK,CAACE,KAAN,GAAcD,OAAO,CAACC,KAAR,GAAgB,CAA9B;AACD;;;2BAEMC,S,EAAWH,K,EAAO;AACvBG,MAAAA,SAAS,CAACC,QAAV,CAAmB,KAAKC,GAAxB;AAEA,WAAKN,GAAL,CAAS,aAAT,EAAwBO,MAAxB,CAA+BH,SAA/B,EAA0CH,KAA1C;AACA,WAAKD,GAAL,CAAS,cAAT,EAAyBO,MAAzB,CAAgCH,SAAhC,EAA2CH,KAA3C;AACA,WAAKD,GAAL,CAAS,UAAT,EAAqBO,MAArB,CAA4BH,SAA5B,EAAuCH,KAAvC;AAEAG,MAAAA,SAAS,CAACI,SAAV;AACD;;;8BAESC,I,EAAM;AACd,UAAI,KAAKC,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYC,SAAZ,CAAsBF,IAAtB;AACA,eAAO,IAAP;AACD;;AACD,cAAQA,IAAI,CAACG,IAAb;AACE,aAAK,KAAKN,GAAV;AACE,eAAKO,KAAL;AACA;;AACF;AACE,eAAKH,MAAL,GAAc,KAAKV,GAAL,CAASS,IAAI,CAACG,IAAd,CAAd;;AACA,cAAI,KAAKF,MAAT,EAAiB;AACf,iBAAKA,MAAL,CAAYC,SAAZ,CAAsBF,IAAtB;AACD;;AACD;AATJ;;AAWA,aAAO,IAAP;AACD;;;gCAEW,CAAE;;;+BAEHG,I,EAAM;AACf,UAAI,KAAKF,MAAT,EAAiB;AACf,YAAI,CAAC,KAAKA,MAAL,CAAYI,UAAZ,CAAuBF,IAAvB,CAAL,EAAmC;AACjC,eAAKG,UAAL,CAAgB,KAAKL,MAAL,CAAYT,KAA5B;AACA,eAAKS,MAAL,GAAcM,SAAd;AACD;;AACD,eAAO,IAAP;AACD;;AACD,cAAQJ,IAAR;AACE,aAAK,KAAKN,GAAV;AACE,iBAAO,KAAP;;AACF;AACE;AACA,iBAAO,IAAP;AALJ;AAOD;;;wBAtDS;AACR,aAAO,SAAP;AACD;;;;EAboBb,S;;AAoEvBwB,MAAM,CAACC,OAAP,GAAiBnB,QAAjB","sourcesContent":["const BaseXform = require('../base-xform');\r\nconst StaticXform = require('../static-xform');\r\n\r\nconst BlipFillXform = require('./blip-fill-xform');\r\nconst NvPicPrXform = require('./nv-pic-pr-xform');\r\n\r\nconst spPrJSON = require('./sp-pr');\r\n\r\nclass PicXform extends BaseXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      'xdr:nvPicPr': new NvPicPrXform(),\r\n      'xdr:blipFill': new BlipFillXform(),\r\n      'xdr:spPr': new StaticXform(spPrJSON),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return 'xdr:pic';\r\n  }\r\n\r\n  prepare(model, options) {\r\n    model.index = options.index + 1;\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openNode(this.tag);\r\n\r\n    this.map['xdr:nvPicPr'].render(xmlStream, model);\r\n    this.map['xdr:blipFill'].render(xmlStream, model);\r\n    this.map['xdr:spPr'].render(xmlStream, model);\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case this.tag:\r\n        this.reset();\r\n        break;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        break;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  parseText() {}\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.mergeModel(this.parser.model);\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case this.tag:\r\n        return false;\r\n      default:\r\n        // not quite sure how we get here!\r\n        return true;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = PicXform;\r\n"],"file":"pic-xform.js"}