{"version":3,"sources":["../../../../../lib/xlsx/xform/simple/string-xform.js"],"names":["BaseXform","require","StringXform","options","tag","attr","attrs","xmlStream","model","undefined","openNode","addAttributes","addAttribute","writeText","closeNode","node","name","attributes","text","push","join","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;IAEMC,W;;;;;AACJ,uBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB;AAEA,UAAKC,GAAL,GAAWD,OAAO,CAACC,GAAnB;AACA,UAAKC,IAAL,GAAYF,OAAO,CAACE,IAApB;AACA,UAAKC,KAAL,GAAaH,OAAO,CAACG,KAArB;AALmB;AAMpB;;;;2BAEMC,S,EAAWC,K,EAAO;AACvB,UAAIA,KAAK,KAAKC,SAAd,EAAyB;AACvBF,QAAAA,SAAS,CAACG,QAAV,CAAmB,KAAKN,GAAxB;;AACA,YAAI,KAAKE,KAAT,EAAgB;AACdC,UAAAA,SAAS,CAACI,aAAV,CAAwB,KAAKL,KAA7B;AACD;;AACD,YAAI,KAAKD,IAAT,EAAe;AACbE,UAAAA,SAAS,CAACK,YAAV,CAAuB,KAAKP,IAA5B,EAAkCG,KAAlC;AACD,SAFD,MAEO;AACLD,UAAAA,SAAS,CAACM,SAAV,CAAoBL,KAApB;AACD;;AACDD,QAAAA,SAAS,CAACO,SAAV;AACD;AACF;;;8BAESC,I,EAAM;AACd,UAAIA,IAAI,CAACC,IAAL,KAAc,KAAKZ,GAAvB,EAA4B;AAC1B,YAAI,KAAKC,IAAT,EAAe;AACb,eAAKG,KAAL,GAAaO,IAAI,CAACE,UAAL,CAAgB,KAAKZ,IAArB,CAAb;AACD,SAFD,MAEO;AACL,eAAKa,IAAL,GAAY,EAAZ;AACD;AACF;AACF;;;8BAESA,I,EAAM;AACd,UAAI,CAAC,KAAKb,IAAV,EAAgB;AACd,aAAKa,IAAL,CAAUC,IAAV,CAAeD,IAAf;AACD;AACF;;;iCAEY;AACX,UAAI,CAAC,KAAKb,IAAV,EAAgB;AACd,aAAKG,KAAL,GAAa,KAAKU,IAAL,CAAUE,IAAV,CAAe,EAAf,CAAb;AACD;;AACD,aAAO,KAAP;AACD;;;;EA7CuBpB,S;;AAgD1BqB,MAAM,CAACC,OAAP,GAAiBpB,WAAjB","sourcesContent":["const BaseXform = require('../base-xform');\r\n\r\nclass StringXform extends BaseXform {\r\n  constructor(options) {\r\n    super();\r\n\r\n    this.tag = options.tag;\r\n    this.attr = options.attr;\r\n    this.attrs = options.attrs;\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    if (model !== undefined) {\r\n      xmlStream.openNode(this.tag);\r\n      if (this.attrs) {\r\n        xmlStream.addAttributes(this.attrs);\r\n      }\r\n      if (this.attr) {\r\n        xmlStream.addAttribute(this.attr, model);\r\n      } else {\r\n        xmlStream.writeText(model);\r\n      }\r\n      xmlStream.closeNode();\r\n    }\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (node.name === this.tag) {\r\n      if (this.attr) {\r\n        this.model = node.attributes[this.attr];\r\n      } else {\r\n        this.text = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  parseText(text) {\r\n    if (!this.attr) {\r\n      this.text.push(text);\r\n    }\r\n  }\r\n\r\n  parseClose() {\r\n    if (!this.attr) {\r\n      this.model = this.text.join('');\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nmodule.exports = StringXform;\r\n"],"file":"string-xform.js"}