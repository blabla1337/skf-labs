{"version":3,"sources":["../../../../../lib/xlsx/xform/style/dxf-xform.js"],"names":["BaseXform","require","AlignmentXform","BorderXform","FillXform","FontXform","NumFmtXform","ProtectionXform","DxfXform","map","alignment","border","fill","font","numFmt","protection","xmlStream","model","openNode","tag","render","closeNode","node","parser","parseOpen","name","reset","text","parseText","parseClose","undefined","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAMC,cAAc,GAAGD,OAAO,CAAC,mBAAD,CAA9B;;AACA,IAAME,WAAW,GAAGF,OAAO,CAAC,gBAAD,CAA3B;;AACA,IAAMG,SAAS,GAAGH,OAAO,CAAC,cAAD,CAAzB;;AACA,IAAMI,SAAS,GAAGJ,OAAO,CAAC,cAAD,CAAzB;;AACA,IAAMK,WAAW,GAAGL,OAAO,CAAC,gBAAD,CAA3B;;AACA,IAAMM,eAAe,GAAGN,OAAO,CAAC,oBAAD,CAA/B,C,CAEA;AACA;AACA;AACA;AAEA;;;IACMO,Q;;;;;AACJ,sBAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,GAAL,GAAW;AACTC,MAAAA,SAAS,EAAE,IAAIR,cAAJ,EADF;AAETS,MAAAA,MAAM,EAAE,IAAIR,WAAJ,EAFC;AAGTS,MAAAA,IAAI,EAAE,IAAIR,SAAJ,EAHG;AAITS,MAAAA,IAAI,EAAE,IAAIR,SAAJ,EAJG;AAKTS,MAAAA,MAAM,EAAE,IAAIR,WAAJ,EALC;AAMTS,MAAAA,UAAU,EAAE,IAAIR,eAAJ;AANH,KAAX;AAHY;AAWb;;;;AAMD;2BAEOS,S,EAAWC,K,EAAO;AACvBD,MAAAA,SAAS,CAACE,QAAV,CAAmB,KAAKC,GAAxB;;AAEA,UAAIF,KAAK,CAACJ,IAAV,EAAgB;AACd,aAAKJ,GAAL,CAASI,IAAT,CAAcO,MAAd,CAAqBJ,SAArB,EAAgCC,KAAK,CAACJ,IAAtC;AACD;;AACD,UAAII,KAAK,CAACH,MAAV,EAAkB;AAChB,aAAKL,GAAL,CAASK,MAAT,CAAgBM,MAAhB,CAAuBJ,SAAvB,EAAkCC,KAAK,CAACH,MAAxC;AACD;;AACD,UAAIG,KAAK,CAACL,IAAV,EAAgB;AACd,aAAKH,GAAL,CAASG,IAAT,CAAcQ,MAAd,CAAqBJ,SAArB,EAAgCC,KAAK,CAACL,IAAtC;AACD;;AACD,UAAIK,KAAK,CAACP,SAAV,EAAqB;AACnB,aAAKD,GAAL,CAASC,SAAT,CAAmBU,MAAnB,CAA0BJ,SAA1B,EAAqCC,KAAK,CAACP,SAA3C;AACD;;AACD,UAAIO,KAAK,CAACN,MAAV,EAAkB;AAChB,aAAKF,GAAL,CAASE,MAAT,CAAgBS,MAAhB,CAAuBJ,SAAvB,EAAkCC,KAAK,CAACN,MAAxC;AACD;;AACD,UAAIM,KAAK,CAACF,UAAV,EAAsB;AACpB,aAAKN,GAAL,CAASM,UAAT,CAAoBK,MAApB,CAA2BJ,SAA3B,EAAsCC,KAAK,CAACF,UAA5C;AACD;;AAEDC,MAAAA,SAAS,CAACK,SAAV;AACD;;;8BAESC,I,EAAM;AACd,UAAI,KAAKC,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYC,SAAZ,CAAsBF,IAAtB;AACA,eAAO,IAAP;AACD;;AAED,cAAQA,IAAI,CAACG,IAAb;AACE,aAAK,KAAKN,GAAV;AACE;AACA,eAAKO,KAAL;AACA,iBAAO,IAAP;;AACF;AACE,eAAKH,MAAL,GAAc,KAAKd,GAAL,CAASa,IAAI,CAACG,IAAd,CAAd;;AACA,cAAI,KAAKF,MAAT,EAAiB;AACf,iBAAKA,MAAL,CAAYC,SAAZ,CAAsBF,IAAtB;AACD;;AACD,iBAAO,IAAP;AAVJ;AAYD;;;8BAESK,I,EAAM;AACd,UAAI,KAAKJ,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYK,SAAZ,CAAsBD,IAAtB;AACD;AACF;;;+BAEUF,I,EAAM;AACf,UAAI,KAAKF,MAAT,EAAiB;AACf,YAAI,CAAC,KAAKA,MAAL,CAAYM,UAAZ,CAAuBJ,IAAvB,CAAL,EAAmC;AACjC,eAAKF,MAAL,GAAcO,SAAd;AACD;;AACD,eAAO,IAAP;AACD;;AACD,UAAIL,IAAI,KAAK,KAAKN,GAAlB,EAAuB;AACrB,aAAKF,KAAL,GAAa;AACXP,UAAAA,SAAS,EAAE,KAAKD,GAAL,CAASC,SAAT,CAAmBO,KADnB;AAEXN,UAAAA,MAAM,EAAE,KAAKF,GAAL,CAASE,MAAT,CAAgBM,KAFb;AAGXL,UAAAA,IAAI,EAAE,KAAKH,GAAL,CAASG,IAAT,CAAcK,KAHT;AAIXJ,UAAAA,IAAI,EAAE,KAAKJ,GAAL,CAASI,IAAT,CAAcI,KAJT;AAKXH,UAAAA,MAAM,EAAE,KAAKL,GAAL,CAASK,MAAT,CAAgBG,KALb;AAMXF,UAAAA,UAAU,EAAE,KAAKN,GAAL,CAASM,UAAT,CAAoBE;AANrB,SAAb;AAQA,eAAO,KAAP;AACD;;AAED,aAAO,IAAP;AACD;;;wBA7ES;AACR,aAAO,KAAP;AACD;;;;EAhBoBjB,S;;AA8FvB+B,MAAM,CAACC,OAAP,GAAiBxB,QAAjB","sourcesContent":["const BaseXform = require('../base-xform');\r\n\r\nconst AlignmentXform = require('./alignment-xform');\r\nconst BorderXform = require('./border-xform');\r\nconst FillXform = require('./fill-xform');\r\nconst FontXform = require('./font-xform');\r\nconst NumFmtXform = require('./numfmt-xform');\r\nconst ProtectionXform = require('./protection-xform');\r\n\r\n// <xf numFmtId=\"[numFmtId]\" fontId=\"[fontId]\" fillId=\"[fillId]\" borderId=\"[xf.borderId]\" xfId=\"[xfId]\">\r\n//   Optional <alignment>\r\n//   Optional <protection>\r\n// </xf>\r\n\r\n// Style assists translation from style model to/from xlsx\r\nclass DxfXform extends BaseXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      alignment: new AlignmentXform(),\r\n      border: new BorderXform(),\r\n      fill: new FillXform(),\r\n      font: new FontXform(),\r\n      numFmt: new NumFmtXform(),\r\n      protection: new ProtectionXform(),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return 'dxf';\r\n  }\r\n\r\n  // how do we generate dxfid?\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openNode(this.tag);\r\n\r\n    if (model.font) {\r\n      this.map.font.render(xmlStream, model.font);\r\n    }\r\n    if (model.numFmt) {\r\n      this.map.numFmt.render(xmlStream, model.numFmt);\r\n    }\r\n    if (model.fill) {\r\n      this.map.fill.render(xmlStream, model.fill);\r\n    }\r\n    if (model.alignment) {\r\n      this.map.alignment.render(xmlStream, model.alignment);\r\n    }\r\n    if (model.border) {\r\n      this.map.border.render(xmlStream, model.border);\r\n    }\r\n    if (model.protection) {\r\n      this.map.protection.render(xmlStream, model.protection);\r\n    }\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n\r\n    switch (node.name) {\r\n      case this.tag:\r\n        // this node is often repeated. Need to reset children\r\n        this.reset();\r\n        return true;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        return true;\r\n    }\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    if (name === this.tag) {\r\n      this.model = {\r\n        alignment: this.map.alignment.model,\r\n        border: this.map.border.model,\r\n        fill: this.map.fill.model,\r\n        font: this.map.font.model,\r\n        numFmt: this.map.numFmt.model,\r\n        protection: this.map.protection.model,\r\n      };\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nmodule.exports = DxfXform;\r\n"],"file":"dxf-xform.js"}