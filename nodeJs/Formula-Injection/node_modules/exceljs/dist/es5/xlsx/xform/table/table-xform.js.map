{"version":3,"sources":["../../../../../lib/xlsx/xform/table/table-xform.js"],"names":["XmlStream","require","BaseXform","ListXform","AutoFilterXform","TableColumnXform","TableStyleInfoXform","TableXform","map","autoFilter","tableColumns","tag","count","empty","childXform","tableStyleInfo","model","options","prepare","columns","xmlStream","openXml","StdDocAttributes","openNode","TABLE_ATTRIBUTES","id","name","displayName","ref","tableRef","totalsRowCount","totalsRow","undefined","totalsRowShown","headerRowCount","headerRow","render","style","closeNode","node","parser","parseOpen","attributes","reset","text","parseText","parseClose","autoFilterRef","forEach","column","index","filterButton","dxfId","styles","getDxfStyle","xmlns","module","exports"],"mappings":"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","sourcesContent":["const XmlStream = require('../../../utils/xml-stream');\r\n\r\nconst BaseXform = require('../base-xform');\r\nconst ListXform = require('../list-xform');\r\n\r\nconst AutoFilterXform = require('./auto-filter-xform');\r\nconst TableColumnXform = require('./table-column-xform');\r\nconst TableStyleInfoXform = require('./table-style-info-xform');\r\n\r\nclass TableXform extends BaseXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      autoFilter: new AutoFilterXform(),\r\n      tableColumns: new ListXform({\r\n        tag: 'tableColumns',\r\n        count: true,\r\n        empty: true,\r\n        childXform: new TableColumnXform(),\r\n      }),\r\n      tableStyleInfo: new TableStyleInfoXform(),\r\n    };\r\n  }\r\n\r\n  prepare(model, options) {\r\n    this.map.autoFilter.prepare(model);\r\n    this.map.tableColumns.prepare(model.columns, options);\r\n  }\r\n\r\n  get tag() {\r\n    return 'table';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openXml(XmlStream.StdDocAttributes);\r\n    xmlStream.openNode(this.tag, {\r\n      ...TableXform.TABLE_ATTRIBUTES,\r\n      id: model.id,\r\n      name: model.name,\r\n      displayName: model.displayName || model.name,\r\n      ref: model.tableRef,\r\n      totalsRowCount: model.totalsRow ? '1' : undefined,\r\n      totalsRowShown: model.totalsRow ? undefined : '1',\r\n      headerRowCount: model.headerRow ? '1' : '0',\r\n    });\r\n\r\n    this.map.autoFilter.render(xmlStream, model);\r\n    this.map.tableColumns.render(xmlStream, model.columns);\r\n    this.map.tableStyleInfo.render(xmlStream, model.style);\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    const {name, attributes} = node;\r\n    switch (name) {\r\n      case this.tag:\r\n        this.reset();\r\n        this.model = {\r\n          name: attributes.name,\r\n          displayName: attributes.displayName || attributes.name,\r\n          tableRef: attributes.ref,\r\n          totalsRow: attributes.totalsRowCount === '1',\r\n          headerRow: attributes.headerRowCount === '1',\r\n        };\r\n        break;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        break;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case this.tag:\r\n        this.model.columns = this.map.tableColumns.model;\r\n        if (this.map.autoFilter.model) {\r\n          this.model.autoFilterRef = this.map.autoFilter.model.autoFilterRef;\r\n          this.map.autoFilter.model.columns.forEach((column, index) => {\r\n            this.model.columns[index].filterButton = column.filterButton;\r\n          });\r\n        }\r\n        this.model.style = this.map.tableStyleInfo.model;\r\n        return false;\r\n      default:\r\n        // could be some unrecognised tags\r\n        return true;\r\n    }\r\n  }\r\n\r\n  reconcile(model, options) {\r\n    // fetch the dfxs from styles\r\n    model.columns.forEach(column => {\r\n      if (column.dxfId !== undefined) {\r\n        column.style = options.styles.getDxfStyle(column.dxfId);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nTableXform.TABLE_ATTRIBUTES = {\r\n  xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\r\n  'xmlns:mc': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\r\n  'mc:Ignorable': 'xr xr3',\r\n  'xmlns:xr': 'http://schemas.microsoft.com/office/spreadsheetml/2014/revision',\r\n  'xmlns:xr3': 'http://schemas.microsoft.com/office/spreadsheetml/2016/revision3',\r\n  // 'xr:uid': '{00000000-000C-0000-FFFF-FFFF00000000}',\r\n};\r\n\r\nmodule.exports = TableXform;\r\n"],"file":"table-xform.js"}