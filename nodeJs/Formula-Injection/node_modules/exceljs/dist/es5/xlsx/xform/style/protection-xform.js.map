{"version":3,"sources":["../../../../../lib/xlsx/xform/style/protection-xform.js"],"names":["BaseXform","require","validation","boolean","value","dflt","undefined","ProtectionXform","xmlStream","model","addRollback","openNode","isValid","add","name","addAttribute","locked","hidden","closeNode","commit","rollback","node","attributes","isSignificant","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,OADiB,mBACTC,KADS,EACFC,IADE,EACI;AACnB,QAAID,KAAK,KAAKE,SAAd,EAAyB;AACvB,aAAOD,IAAP;AACD;;AACD,WAAOD,KAAP;AACD;AANgB,CAAnB,C,CASA;;IACMG,e;;;;;;;;;;;;;2BAKGC,S,EAAWC,K,EAAO;AACvBD,MAAAA,SAAS,CAACE,WAAV;AACAF,MAAAA,SAAS,CAACG,QAAV,CAAmB,YAAnB;AAEA,UAAIC,OAAO,GAAG,KAAd;;AACA,eAASC,GAAT,CAAaC,IAAb,EAAmBV,KAAnB,EAA0B;AACxB,YAAIA,KAAK,KAAKE,SAAd,EAAyB;AACvBE,UAAAA,SAAS,CAACO,YAAV,CAAuBD,IAAvB,EAA6BV,KAA7B;AACAQ,UAAAA,OAAO,GAAG,IAAV;AACD;AACF;;AACDC,MAAAA,GAAG,CAAC,QAAD,EAAWX,UAAU,CAACC,OAAX,CAAmBM,KAAK,CAACO,MAAzB,EAAiC,IAAjC,IAAyCV,SAAzC,GAAqD,GAAhE,CAAH;AACAO,MAAAA,GAAG,CAAC,QAAD,EAAWX,UAAU,CAACC,OAAX,CAAmBM,KAAK,CAACQ,MAAzB,EAAiC,KAAjC,IAA0C,GAA1C,GAAgDX,SAA3D,CAAH;AAEAE,MAAAA,SAAS,CAACU,SAAV;;AAEA,UAAIN,OAAJ,EAAa;AACXJ,QAAAA,SAAS,CAACW,MAAV;AACD,OAFD,MAEO;AACLX,QAAAA,SAAS,CAACY,QAAV;AACD;AACF;;;8BAESC,I,EAAM;AACd,UAAMZ,KAAK,GAAG;AACZO,QAAAA,MAAM,EAAE,EAAEK,IAAI,CAACC,UAAL,CAAgBN,MAAhB,KAA2B,GAA7B,CADI;AAEZC,QAAAA,MAAM,EAAEI,IAAI,CAACC,UAAL,CAAgBL,MAAhB,KAA2B;AAFvB,OAAd,CADc,CAMd;;AACA,UAAMM,aAAa,GAAG,CAACd,KAAK,CAACO,MAAP,IAAiBP,KAAK,CAACQ,MAA7C;AAEA,WAAKR,KAAL,GAAac,aAAa,GAAGd,KAAH,GAAW,IAArC;AACD;;;gCAEW,CAAE;;;iCAED;AACX,aAAO,KAAP;AACD;;;wBA3CS;AACR,aAAO,YAAP;AACD;;;;EAH2BT,S;;AA+C9BwB,MAAM,CAACC,OAAP,GAAiBlB,eAAjB","sourcesContent":["const BaseXform = require('../base-xform');\r\n\r\nconst validation = {\r\n  boolean(value, dflt) {\r\n    if (value === undefined) {\r\n      return dflt;\r\n    }\r\n    return value;\r\n  },\r\n};\r\n\r\n// Protection encapsulates translation from style.protection model to/from xlsx\r\nclass ProtectionXform extends BaseXform {\r\n  get tag() {\r\n    return 'protection';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.addRollback();\r\n    xmlStream.openNode('protection');\r\n\r\n    let isValid = false;\r\n    function add(name, value) {\r\n      if (value !== undefined) {\r\n        xmlStream.addAttribute(name, value);\r\n        isValid = true;\r\n      }\r\n    }\r\n    add('locked', validation.boolean(model.locked, true) ? undefined : '0');\r\n    add('hidden', validation.boolean(model.hidden, false) ? '1' : undefined);\r\n\r\n    xmlStream.closeNode();\r\n\r\n    if (isValid) {\r\n      xmlStream.commit();\r\n    } else {\r\n      xmlStream.rollback();\r\n    }\r\n  }\r\n\r\n  parseOpen(node) {\r\n    const model = {\r\n      locked: !(node.attributes.locked === '0'),\r\n      hidden: node.attributes.hidden === '1',\r\n    };\r\n\r\n    // only want to record models that differ from defaults\r\n    const isSignificant = !model.locked || model.hidden;\r\n\r\n    this.model = isSignificant ? model : null;\r\n  }\r\n\r\n  parseText() {}\r\n\r\n  parseClose() {\r\n    return false;\r\n  }\r\n}\r\n\r\nmodule.exports = ProtectionXform;\r\n"],"file":"protection-xform.js"}