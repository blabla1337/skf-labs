{"version":3,"sources":["../../../../../../lib/xlsx/xform/sheet/cf-ext/conditional-formattings-ext-xform.js"],"names":["CompositeXform","require","CfRuleExtXform","ConditionalFormattingExtXform","ConditionalFormattingsExtXform","map","cfXform","model","hasExtContent","undefined","some","cf","rules","isExt","options","forEach","prepare","xmlStream","hasContent","openNode","tag","render","closeNode","name","parser","push","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,cAAc,GAAGC,OAAO,CAAC,uBAAD,CAA9B;;AAEA,IAAMC,cAAc,GAAGD,OAAO,CAAC,qBAAD,CAA9B;;AACA,IAAME,6BAA6B,GAAGF,OAAO,CAAC,oCAAD,CAA7C;;IAEMG,8B;;;;;AACJ,4CAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,GAAL,GAAW;AACT,mCAA8B,MAAKC,OAAL,GAAe,IAAIH,6BAAJ;AADpC,KAAX;AAHY;AAMb;;;;+BAMUI,K,EAAO;AAChB,UAAIA,KAAK,CAACC,aAAN,KAAwBC,SAA5B,EAAuC;AACrCF,QAAAA,KAAK,CAACC,aAAN,GAAsBD,KAAK,CAACG,IAAN,CAAW,UAAAC,EAAE;AAAA,iBAAIA,EAAE,CAACC,KAAH,CAASF,IAAT,CAAcR,cAAc,CAACW,KAA7B,CAAJ;AAAA,SAAb,CAAtB;AACD;;AACD,aAAON,KAAK,CAACC,aAAb;AACD;;;4BAEOD,K,EAAOO,O,EAAS;AAAA;;AACtBP,MAAAA,KAAK,CAACQ,OAAN,CAAc,UAAAJ,EAAE,EAAI;AAClB,QAAA,MAAI,CAACL,OAAL,CAAaU,OAAb,CAAqBL,EAArB,EAAyBG,OAAzB;AACD,OAFD;AAGD;;;2BAEMG,S,EAAWV,K,EAAO;AAAA;;AACvB,UAAI,KAAKW,UAAL,CAAgBX,KAAhB,CAAJ,EAA4B;AAC1BU,QAAAA,SAAS,CAACE,QAAV,CAAmB,KAAKC,GAAxB;AACAb,QAAAA,KAAK,CAACQ,OAAN,CAAc,UAAAJ,EAAE;AAAA,iBAAI,MAAI,CAACL,OAAL,CAAae,MAAb,CAAoBJ,SAApB,EAA+BN,EAA/B,CAAJ;AAAA,SAAhB;AACAM,QAAAA,SAAS,CAACK,SAAV;AACD;AACF;;;qCAEgB;AACf,aAAO,EAAP;AACD;;;kCAEaC,I,EAAMC,M,EAAQ;AAC1B;AACA,WAAKjB,KAAL,CAAWkB,IAAX,CAAgBD,MAAM,CAACjB,KAAvB;AACD;;;wBAhCS;AACR,aAAO,4BAAP;AACD;;;;EAX0CP,c;;AA4C7C0B,MAAM,CAACC,OAAP,GAAiBvB,8BAAjB","sourcesContent":["const CompositeXform = require('../../composite-xform');\r\n\r\nconst CfRuleExtXform = require('./cf-rule-ext-xform');\r\nconst ConditionalFormattingExtXform = require('./conditional-formatting-ext-xform');\r\n\r\nclass ConditionalFormattingsExtXform extends CompositeXform {\r\n  constructor() {\r\n    super();\r\n\r\n    this.map = {\r\n      'x14:conditionalFormatting': (this.cfXform = new ConditionalFormattingExtXform()),\r\n    };\r\n  }\r\n\r\n  get tag() {\r\n    return 'x14:conditionalFormattings';\r\n  }\r\n\r\n  hasContent(model) {\r\n    if (model.hasExtContent === undefined) {\r\n      model.hasExtContent = model.some(cf => cf.rules.some(CfRuleExtXform.isExt));\r\n    }\r\n    return model.hasExtContent;\r\n  }\r\n\r\n  prepare(model, options) {\r\n    model.forEach(cf => {\r\n      this.cfXform.prepare(cf, options);\r\n    });\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    if (this.hasContent(model)) {\r\n      xmlStream.openNode(this.tag);\r\n      model.forEach(cf => this.cfXform.render(xmlStream, cf));\r\n      xmlStream.closeNode();\r\n    }\r\n  }\r\n\r\n  createNewModel() {\r\n    return [];\r\n  }\r\n\r\n  onParserClose(name, parser) {\r\n    // model is array of conditional formatting objects\r\n    this.model.push(parser.model);\r\n  }\r\n}\r\n\r\nmodule.exports = ConditionalFormattingsExtXform;\r\n"],"file":"conditional-formattings-ext-xform.js"}