{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/sheet-view-xform.js"],"names":["colCache","require","BaseXform","VIEW_STATES","frozen","frozenSplit","split","SheetViewXform","model","state","xmlStream","openNode","workbookViewId","add","name","value","included","addAttribute","rightToLeft","tabSelected","showRuler","showRowColHeaders","showGridLines","zoomScale","zoomScaleNormal","style","topLeftCell","xSplit","ySplit","activePane","getAddress","address","leafNode","undefined","pane","activeCell","sqref","closeNode","node","sheetView","parseInt","attributes","view","selections","selection","topLeft","module","exports"],"mappings":"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","sourcesContent":["const colCache = require('../../../utils/col-cache');\r\nconst BaseXform = require('../base-xform');\r\n\r\nconst VIEW_STATES = {\r\n  frozen: 'frozen',\r\n  frozenSplit: 'frozen',\r\n  split: 'split',\r\n};\r\n\r\nclass SheetViewXform extends BaseXform {\r\n  get tag() {\r\n    return 'sheetView';\r\n  }\r\n\r\n  prepare(model) {\r\n    switch (model.state) {\r\n      case 'frozen':\r\n      case 'split':\r\n        break;\r\n      default:\r\n        model.state = 'normal';\r\n        break;\r\n    }\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openNode('sheetView', {\r\n      workbookViewId: model.workbookViewId || 0,\r\n    });\r\n    const add = function(name, value, included) {\r\n      if (included) {\r\n        xmlStream.addAttribute(name, value);\r\n      }\r\n    };\r\n    add('rightToLeft', '1', model.rightToLeft === true);\r\n    add('tabSelected', '1', model.tabSelected);\r\n    add('showRuler', '0', model.showRuler === false);\r\n    add('showRowColHeaders', '0', model.showRowColHeaders === false);\r\n    add('showGridLines', '0', model.showGridLines === false);\r\n    add('zoomScale', model.zoomScale, model.zoomScale);\r\n    add('zoomScaleNormal', model.zoomScaleNormal, model.zoomScaleNormal);\r\n    add('view', model.style, model.style);\r\n\r\n    let topLeftCell;\r\n    let xSplit;\r\n    let ySplit;\r\n    let activePane;\r\n    switch (model.state) {\r\n      case 'frozen':\r\n        xSplit = model.xSplit || 0;\r\n        ySplit = model.ySplit || 0;\r\n        topLeftCell = model.topLeftCell || colCache.getAddress(ySplit + 1, xSplit + 1).address;\r\n        activePane =\r\n          (model.xSplit && model.ySplit && 'bottomRight') ||\r\n          (model.xSplit && 'topRight') ||\r\n          'bottomLeft';\r\n\r\n        xmlStream.leafNode('pane', {\r\n          xSplit: model.xSplit || undefined,\r\n          ySplit: model.ySplit || undefined,\r\n          topLeftCell,\r\n          activePane,\r\n          state: 'frozen',\r\n        });\r\n        xmlStream.leafNode('selection', {\r\n          pane: activePane,\r\n          activeCell: model.activeCell,\r\n          sqref: model.activeCell,\r\n        });\r\n        break;\r\n      case 'split':\r\n        if (model.activePane === 'topLeft') {\r\n          model.activePane = undefined;\r\n        }\r\n        xmlStream.leafNode('pane', {\r\n          xSplit: model.xSplit || undefined,\r\n          ySplit: model.ySplit || undefined,\r\n          topLeftCell: model.topLeftCell,\r\n          activePane: model.activePane,\r\n        });\r\n        xmlStream.leafNode('selection', {\r\n          pane: model.activePane,\r\n          activeCell: model.activeCell,\r\n          sqref: model.activeCell,\r\n        });\r\n        break;\r\n      case 'normal':\r\n        if (model.activeCell) {\r\n          xmlStream.leafNode('selection', {\r\n            activeCell: model.activeCell,\r\n            sqref: model.activeCell,\r\n          });\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    switch (node.name) {\r\n      case 'sheetView':\r\n        this.sheetView = {\r\n          workbookViewId: parseInt(node.attributes.workbookViewId, 10),\r\n          rightToLeft: node.attributes.rightToLeft === '1',\r\n          tabSelected: node.attributes.tabSelected === '1',\r\n          showRuler: !(node.attributes.showRuler === '0'),\r\n          showRowColHeaders: !(node.attributes.showRowColHeaders === '0'),\r\n          showGridLines: !(node.attributes.showGridLines === '0'),\r\n          zoomScale: parseInt(node.attributes.zoomScale || '100', 10),\r\n          zoomScaleNormal: parseInt(node.attributes.zoomScaleNormal || '100', 10),\r\n          style: node.attributes.view,\r\n        };\r\n        this.pane = undefined;\r\n        this.selections = {};\r\n        return true;\r\n\r\n      case 'pane':\r\n        this.pane = {\r\n          xSplit: parseInt(node.attributes.xSplit || '0', 10),\r\n          ySplit: parseInt(node.attributes.ySplit || '0', 10),\r\n          topLeftCell: node.attributes.topLeftCell,\r\n          activePane: node.attributes.activePane || 'topLeft',\r\n          state: node.attributes.state,\r\n        };\r\n        return true;\r\n\r\n      case 'selection': {\r\n        const name = node.attributes.pane || 'topLeft';\r\n        this.selections[name] = {\r\n          pane: name,\r\n          activeCell: node.attributes.activeCell,\r\n        };\r\n        return true;\r\n      }\r\n\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  parseText() {}\r\n\r\n  parseClose(name) {\r\n    let model;\r\n    let selection;\r\n    switch (name) {\r\n      case 'sheetView':\r\n        if (this.sheetView && this.pane) {\r\n          model = this.model = {\r\n            workbookViewId: this.sheetView.workbookViewId,\r\n            rightToLeft: this.sheetView.rightToLeft,\r\n            state: VIEW_STATES[this.pane.state] || 'split', // split is default\r\n            xSplit: this.pane.xSplit,\r\n            ySplit: this.pane.ySplit,\r\n            topLeftCell: this.pane.topLeftCell,\r\n            showRuler: this.sheetView.showRuler,\r\n            showRowColHeaders: this.sheetView.showRowColHeaders,\r\n            showGridLines: this.sheetView.showGridLines,\r\n            zoomScale: this.sheetView.zoomScale,\r\n            zoomScaleNormal: this.sheetView.zoomScaleNormal,\r\n          };\r\n          if (this.model.state === 'split') {\r\n            model.activePane = this.pane.activePane;\r\n          }\r\n          selection = this.selections[this.pane.activePane];\r\n          if (selection && selection.activeCell) {\r\n            model.activeCell = selection.activeCell;\r\n          }\r\n          if (this.sheetView.style) {\r\n            model.style = this.sheetView.style;\r\n          }\r\n        } else {\r\n          model = this.model = {\r\n            workbookViewId: this.sheetView.workbookViewId,\r\n            rightToLeft: this.sheetView.rightToLeft,\r\n            state: 'normal',\r\n            showRuler: this.sheetView.showRuler,\r\n            showRowColHeaders: this.sheetView.showRowColHeaders,\r\n            showGridLines: this.sheetView.showGridLines,\r\n            zoomScale: this.sheetView.zoomScale,\r\n            zoomScaleNormal: this.sheetView.zoomScaleNormal,\r\n          };\r\n          selection = this.selections.topLeft;\r\n          if (selection && selection.activeCell) {\r\n            model.activeCell = selection.activeCell;\r\n          }\r\n          if (this.sheetView.style) {\r\n            model.style = this.sheetView.style;\r\n          }\r\n        }\r\n        return false;\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n\r\n  reconcile() {}\r\n}\r\n\r\nmodule.exports = SheetViewXform;\r\n"],"file":"sheet-view-xform.js"}