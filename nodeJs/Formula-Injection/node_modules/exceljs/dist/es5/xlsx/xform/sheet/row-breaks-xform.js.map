{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/row-breaks-xform.js"],"names":["PageBreaksXform","require","ListXform","RowBreaksXform","options","tag","count","childXform","xmlStream","model","length","openNode","$","addAttribute","$count","forEach","childModel","render","closeNode","empty","leafNode","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,eAAe,GAAGC,OAAO,CAAC,qBAAD,CAA/B;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,eAAD,CAAzB;;IAEME,c;;;;;AACJ,4BAAc;AAAA;;AACZ,QAAMC,OAAO,GAAG;AACdC,MAAAA,GAAG,EAAE,WADS;AAEdC,MAAAA,KAAK,EAAE,IAFO;AAGdC,MAAAA,UAAU,EAAE,IAAIP,eAAJ;AAHE,KAAhB;AADY,6BAMNI,OANM;AAOb,G,CAED;;;;;2BAEOI,S,EAAWC,K,EAAO;AACvB,UAAIA,KAAK,IAAIA,KAAK,CAACC,MAAnB,EAA2B;AACzBF,QAAAA,SAAS,CAACG,QAAV,CAAmB,KAAKN,GAAxB,EAA6B,KAAKO,CAAlC;;AACA,YAAI,KAAKN,KAAT,EAAgB;AACdE,UAAAA,SAAS,CAACK,YAAV,CAAuB,KAAKC,MAA5B,EAAoCL,KAAK,CAACC,MAA1C;AACAF,UAAAA,SAAS,CAACK,YAAV,CAAuB,kBAAvB,EAA2CJ,KAAK,CAACC,MAAjD;AACD;;AALwB,YAOlBH,UAPkB,GAOJ,IAPI,CAOlBA,UAPkB;AAQzBE,QAAAA,KAAK,CAACM,OAAN,CAAc,UAAAC,UAAU,EAAI;AAC1BT,UAAAA,UAAU,CAACU,MAAX,CAAkBT,SAAlB,EAA6BQ,UAA7B;AACD,SAFD;AAIAR,QAAAA,SAAS,CAACU,SAAV;AACD,OAbD,MAaO,IAAI,KAAKC,KAAT,EAAgB;AACrBX,QAAAA,SAAS,CAACY,QAAV,CAAmB,KAAKf,GAAxB;AACD;AACF;;;;EA7B0BH,S;;AAgC7BmB,MAAM,CAACC,OAAP,GAAiBnB,cAAjB","sourcesContent":["'use strict';\r\n\r\nconst PageBreaksXform = require('./page-breaks-xform');\r\n\r\nconst ListXform = require('../list-xform');\r\n\r\nclass RowBreaksXform extends ListXform {\r\n  constructor() {\r\n    const options = {\r\n      tag: 'rowBreaks',\r\n      count: true,\r\n      childXform: new PageBreaksXform(),\r\n    };\r\n    super(options);\r\n  }\r\n\r\n  // get tag() { return 'rowBreaks'; }\r\n\r\n  render(xmlStream, model) {\r\n    if (model && model.length) {\r\n      xmlStream.openNode(this.tag, this.$);\r\n      if (this.count) {\r\n        xmlStream.addAttribute(this.$count, model.length);\r\n        xmlStream.addAttribute('manualBreakCount', model.length);\r\n      }\r\n\r\n      const {childXform} = this;\r\n      model.forEach(childModel => {\r\n        childXform.render(xmlStream, childModel);\r\n      });\r\n\r\n      xmlStream.closeNode();\r\n    } else if (this.empty) {\r\n      xmlStream.leafNode(this.tag);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = RowBreaksXform;\r\n"],"file":"row-breaks-xform.js"}