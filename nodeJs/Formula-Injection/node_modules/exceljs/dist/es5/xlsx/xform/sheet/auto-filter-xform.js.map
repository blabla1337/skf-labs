{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/auto-filter-xform.js"],"names":["colCache","require","BaseXform","AutoFilterXform","xmlStream","model","leafNode","ref","getAddress","addr","row","column","address","firstAddress","from","secondAddress","to","node","name","attributes","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,0BAAD,CAAxB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,eAAD,CAAzB;;IAEME,e;;;;;;;;;;;;;2BAKGC,S,EAAWC,K,EAAO;AACvB,UAAIA,KAAJ,EAAW;AACT,YAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B;AACAD,UAAAA,SAAS,CAACE,QAAV,CAAmB,YAAnB,EAAiC;AAACC,YAAAA,GAAG,EAAEF;AAAN,WAAjC;AACD,SAHD,MAGO;AACL,cAAMG,UAAU,GAAG,SAAbA,UAAa,CAASC,IAAT,EAAe;AAChC,gBAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,qBAAOA,IAAP;AACD;;AACD,mBAAOT,QAAQ,CAACQ,UAAT,CAAoBC,IAAI,CAACC,GAAzB,EAA8BD,IAAI,CAACE,MAAnC,EAA2CC,OAAlD;AACD,WALD;;AAOA,cAAMC,YAAY,GAAGL,UAAU,CAACH,KAAK,CAACS,IAAP,CAA/B;AACA,cAAMC,aAAa,GAAGP,UAAU,CAACH,KAAK,CAACW,EAAP,CAAhC;;AACA,cAAIH,YAAY,IAAIE,aAApB,EAAmC;AACjCX,YAAAA,SAAS,CAACE,QAAV,CAAmB,YAAnB,EAAiC;AAACC,cAAAA,GAAG,YAAKM,YAAL,cAAqBE,aAArB;AAAJ,aAAjC;AACD;AACF;AACF;AACF;;;8BAESE,I,EAAM;AACd,UAAIA,IAAI,CAACC,IAAL,KAAc,YAAlB,EAAgC;AAC9B,aAAKb,KAAL,GAAaY,IAAI,CAACE,UAAL,CAAgBZ,GAA7B;AACD;AACF;;;wBA9BS;AACR,aAAO,YAAP;AACD;;;;EAH2BL,S;;AAkC9BkB,MAAM,CAACC,OAAP,GAAiBlB,eAAjB","sourcesContent":["const colCache = require('../../../utils/col-cache');\r\nconst BaseXform = require('../base-xform');\r\n\r\nclass AutoFilterXform extends BaseXform {\r\n  get tag() {\r\n    return 'autoFilter';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    if (model) {\r\n      if (typeof model === 'string') {\r\n        // assume range\r\n        xmlStream.leafNode('autoFilter', {ref: model});\r\n      } else {\r\n        const getAddress = function(addr) {\r\n          if (typeof addr === 'string') {\r\n            return addr;\r\n          }\r\n          return colCache.getAddress(addr.row, addr.column).address;\r\n        };\r\n\r\n        const firstAddress = getAddress(model.from);\r\n        const secondAddress = getAddress(model.to);\r\n        if (firstAddress && secondAddress) {\r\n          xmlStream.leafNode('autoFilter', {ref: `${firstAddress}:${secondAddress}`});\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (node.name === 'autoFilter') {\r\n      this.model = node.attributes.ref;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = AutoFilterXform;\r\n"],"file":"auto-filter-xform.js"}