{"version":3,"sources":["../../../../../lib/xlsx/xform/drawing/cell-position-xform.js"],"names":["BaseXform","require","IntegerXform","CellPositionXform","options","tag","map","zero","xmlStream","model","openNode","render","nativeCol","nativeColOff","nativeRow","nativeRowOff","closeNode","node","parser","parseOpen","name","reset","text","parseText","parseClose","undefined","module","exports"],"mappings":"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","sourcesContent":["const BaseXform = require('../base-xform');\r\nconst IntegerXform = require('../simple/integer-xform');\r\n\r\nclass CellPositionXform extends BaseXform {\r\n  constructor(options) {\r\n    super();\r\n\r\n    this.tag = options.tag;\r\n    this.map = {\r\n      'xdr:col': new IntegerXform({tag: 'xdr:col', zero: true}),\r\n      'xdr:colOff': new IntegerXform({tag: 'xdr:colOff', zero: true}),\r\n      'xdr:row': new IntegerXform({tag: 'xdr:row', zero: true}),\r\n      'xdr:rowOff': new IntegerXform({tag: 'xdr:rowOff', zero: true}),\r\n    };\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    xmlStream.openNode(this.tag);\r\n\r\n    this.map['xdr:col'].render(xmlStream, model.nativeCol);\r\n    this.map['xdr:colOff'].render(xmlStream, model.nativeColOff);\r\n\r\n    this.map['xdr:row'].render(xmlStream, model.nativeRow);\r\n    this.map['xdr:rowOff'].render(xmlStream, model.nativeRowOff);\r\n\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case this.tag:\r\n        this.reset();\r\n        break;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        break;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case this.tag:\r\n        this.model = {\r\n          nativeCol: this.map['xdr:col'].model,\r\n          nativeColOff: this.map['xdr:colOff'].model,\r\n          nativeRow: this.map['xdr:row'].model,\r\n          nativeRowOff: this.map['xdr:rowOff'].model,\r\n        };\r\n        return false;\r\n      default:\r\n        // not quite sure how we get here!\r\n        return true;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = CellPositionXform;\r\n"],"file":"cell-position-xform.js"}