{"version":3,"sources":["../../../../../lib/xlsx/xform/comment/comment-xform.js"],"names":["RichTextXform","require","utils","BaseXform","CommentXform","module","exports","model","inherits","tag","richTextXform","_richTextXform","render","xmlStream","openNode","ref","authorId","note","texts","forEach","text","closeNode","parseOpen","node","parser","name","type","attributes","parseText","parseClose","push","undefined"],"mappings":"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","sourcesContent":["const RichTextXform = require('../strings/rich-text-xform');\r\nconst utils = require('../../../utils/utils');\r\nconst BaseXform = require('../base-xform');\r\n\r\n/**\r\n  <comment ref=\"B1\" authorId=\"0\">\r\n    <text>\r\n      <r>\r\n        <rPr>\r\n          <b/>\r\n          <sz val=\"9\"/>\r\n          <rFont val=\"宋体\"/>\r\n          <charset val=\"134\"/>\r\n        </rPr>\r\n        <t>51422:</t>\r\n      </r>\r\n      <r>\r\n        <rPr>\r\n          <sz val=\"9\"/>\r\n          <rFont val=\"宋体\"/>\r\n          <charset val=\"134\"/>\r\n        </rPr>\r\n        <t xml:space=\"preserve\">&#10;test</t>\r\n      </r>\r\n    </text>\r\n  </comment>\r\n */\r\n\r\nconst CommentXform = (module.exports = function(model) {\r\n  this.model = model;\r\n});\r\n\r\nutils.inherits(CommentXform, BaseXform, {\r\n  get tag() {\r\n    return 'r';\r\n  },\r\n\r\n  get richTextXform() {\r\n    if (!this._richTextXform) {\r\n      this._richTextXform = new RichTextXform();\r\n    }\r\n    return this._richTextXform;\r\n  },\r\n\r\n  render(xmlStream, model) {\r\n    model = model || this.model;\r\n\r\n    xmlStream.openNode('comment', {\r\n      ref: model.ref,\r\n      authorId: 0,\r\n    });\r\n    xmlStream.openNode('text');\r\n    if (model && model.note && model.note.texts) {\r\n      model.note.texts.forEach(text => {\r\n        this.richTextXform.render(xmlStream, text);\r\n      });\r\n    }\r\n    xmlStream.closeNode();\r\n    xmlStream.closeNode();\r\n  },\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case 'comment':\r\n        this.model = {\r\n          type: 'note',\r\n          note: {\r\n            texts: [],\r\n          },\r\n          ...node.attributes,\r\n        };\r\n        return true;\r\n      case 'r':\r\n        this.parser = this.richTextXform;\r\n        this.parser.parseOpen(node);\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  },\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  },\r\n  parseClose(name) {\r\n    switch (name) {\r\n      case 'comment':\r\n        return false;\r\n      case 'r':\r\n        this.model.note.texts.push(this.parser.model);\r\n        this.parser = undefined;\r\n        return true;\r\n      default:\r\n        if (this.parser) {\r\n          this.parser.parseClose(name);\r\n        }\r\n        return true;\r\n    }\r\n  },\r\n});\r\n"],"file":"comment-xform.js"}