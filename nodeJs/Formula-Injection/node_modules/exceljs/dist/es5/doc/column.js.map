{"version":3,"sources":["../../../lib/doc/column.js"],"names":["_","require","Enums","colCache","DEFAULT_COLUMN_WIDTH","Column","worksheet","number","defn","_worksheet","_number","JSON","stringify","key","width","headers","length","undefined","other","hidden","outlineLevel","isEqual","style","options","iteratee","colNumber","eachRow","row","rowNumber","getCell","name","value","eachCell","cell","n2l","header","_header","_hidden","_key","Array","forEach","text","index","column","getColumnKey","deleteColumnKey","setColumnKey","_outlineLevel","properties","outlineLevelCol","isCustomWidth","s","font","numFmt","alignment","border","fill","protection","v","type","ValueType","Null","offset","hasOwnProperty","_applyStyle","columns","cols","col","isDefault","equivalentTo","min","max","collapsed","push","count","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nconst _ = require('../utils/under-dash');\r\n\r\nconst Enums = require('./enums');\r\nconst colCache = require('../utils/col-cache');\r\n\r\nconst DEFAULT_COLUMN_WIDTH = 9;\r\n\r\n// Column defines the column properties for 1 column.\r\n// This includes header rows, widths, key, (style), etc.\r\n// Worksheet will condense the columns as appropriate during serialization\r\nclass Column {\r\n  constructor(worksheet, number, defn) {\r\n    this._worksheet = worksheet;\r\n    this._number = number;\r\n    if (defn !== false) {\r\n      // sometimes defn will follow\r\n      this.defn = defn;\r\n    }\r\n  }\r\n\r\n  get number() {\r\n    return this._number;\r\n  }\r\n\r\n  get worksheet() {\r\n    return this._worksheet;\r\n  }\r\n\r\n  get letter() {\r\n    return colCache.n2l(this._number);\r\n  }\r\n\r\n  get isCustomWidth() {\r\n    return this.width !== undefined && this.width !== DEFAULT_COLUMN_WIDTH;\r\n  }\r\n\r\n  get defn() {\r\n    return {\r\n      header: this._header,\r\n      key: this.key,\r\n      width: this.width,\r\n      style: this.style,\r\n      hidden: this.hidden,\r\n      outlineLevel: this.outlineLevel,\r\n    };\r\n  }\r\n\r\n  set defn(value) {\r\n    if (value) {\r\n      this.key = value.key;\r\n      this.width = value.width !== undefined ? value.width : DEFAULT_COLUMN_WIDTH;\r\n      this.outlineLevel = value.outlineLevel;\r\n      if (value.style) {\r\n        this.style = value.style;\r\n      } else {\r\n        this.style = {};\r\n      }\r\n\r\n      // headers must be set after style\r\n      this.header = value.header;\r\n      this._hidden = !!value.hidden;\r\n    } else {\r\n      delete this._header;\r\n      delete this._key;\r\n      delete this.width;\r\n      this.style = {};\r\n      this.outlineLevel = 0;\r\n    }\r\n  }\r\n\r\n  get headers() {\r\n    return this._header && this._header instanceof Array ? this._header : [this._header];\r\n  }\r\n\r\n  get header() {\r\n    return this._header;\r\n  }\r\n\r\n  set header(value) {\r\n    if (value !== undefined) {\r\n      this._header = value;\r\n      this.headers.forEach((text, index) => {\r\n        this._worksheet.getCell(index + 1, this.number).value = text;\r\n      });\r\n    } else {\r\n      this._header = undefined;\r\n    }\r\n  }\r\n\r\n  get key() {\r\n    return this._key;\r\n  }\r\n\r\n  set key(value) {\r\n    const column = this._key && this._worksheet.getColumnKey(this._key);\r\n    if (column === this) {\r\n      this._worksheet.deleteColumnKey(this._key);\r\n    }\r\n\r\n    this._key = value;\r\n    if (value) {\r\n      this._worksheet.setColumnKey(this._key, this);\r\n    }\r\n  }\r\n\r\n  get hidden() {\r\n    return !!this._hidden;\r\n  }\r\n\r\n  set hidden(value) {\r\n    this._hidden = value;\r\n  }\r\n\r\n  get outlineLevel() {\r\n    return this._outlineLevel || 0;\r\n  }\r\n\r\n  set outlineLevel(value) {\r\n    this._outlineLevel = value;\r\n  }\r\n\r\n  get collapsed() {\r\n    return !!(\r\n      this._outlineLevel && this._outlineLevel >= this._worksheet.properties.outlineLevelCol\r\n    );\r\n  }\r\n\r\n  toString() {\r\n    return JSON.stringify({\r\n      key: this.key,\r\n      width: this.width,\r\n      headers: this.headers.length ? this.headers : undefined,\r\n    });\r\n  }\r\n\r\n  equivalentTo(other) {\r\n    return (\r\n      this.width === other.width &&\r\n      this.hidden === other.hidden &&\r\n      this.outlineLevel === other.outlineLevel &&\r\n      _.isEqual(this.style, other.style)\r\n    );\r\n  }\r\n\r\n  get isDefault() {\r\n    if (this.isCustomWidth) {\r\n      return false;\r\n    }\r\n    if (this.hidden) {\r\n      return false;\r\n    }\r\n    if (this.outlineLevel) {\r\n      return false;\r\n    }\r\n    const s = this.style;\r\n    if (s && (s.font || s.numFmt || s.alignment || s.border || s.fill || s.protection)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  get headerCount() {\r\n    return this.headers.length;\r\n  }\r\n\r\n  eachCell(options, iteratee) {\r\n    const colNumber = this.number;\r\n    if (!iteratee) {\r\n      iteratee = options;\r\n      options = null;\r\n    }\r\n    this._worksheet.eachRow(options, (row, rowNumber) => {\r\n      iteratee(row.getCell(colNumber), rowNumber);\r\n    });\r\n  }\r\n\r\n  get values() {\r\n    const v = [];\r\n    this.eachCell((cell, rowNumber) => {\r\n      if (cell && cell.type !== Enums.ValueType.Null) {\r\n        v[rowNumber] = cell.value;\r\n      }\r\n    });\r\n    return v;\r\n  }\r\n\r\n  set values(v) {\r\n    if (!v) {\r\n      return;\r\n    }\r\n    const colNumber = this.number;\r\n    let offset = 0;\r\n    if (v.hasOwnProperty('0')) {\r\n      // assume contiguous array, start at row 1\r\n      offset = 1;\r\n    }\r\n    v.forEach((value, index) => {\r\n      this._worksheet.getCell(index + offset, colNumber).value = value;\r\n    });\r\n  }\r\n\r\n  // =========================================================================\r\n  // styles\r\n  _applyStyle(name, value) {\r\n    this.style[name] = value;\r\n    this.eachCell(cell => {\r\n      cell[name] = value;\r\n    });\r\n    return value;\r\n  }\r\n\r\n  get numFmt() {\r\n    return this.style.numFmt;\r\n  }\r\n\r\n  set numFmt(value) {\r\n    this._applyStyle('numFmt', value);\r\n  }\r\n\r\n  get font() {\r\n    return this.style.font;\r\n  }\r\n\r\n  set font(value) {\r\n    this._applyStyle('font', value);\r\n  }\r\n\r\n  get alignment() {\r\n    return this.style.alignment;\r\n  }\r\n\r\n  set alignment(value) {\r\n    this._applyStyle('alignment', value);\r\n  }\r\n\r\n  get protection() {\r\n    return this.style.protection;\r\n  }\r\n\r\n  set protection(value) {\r\n    this._applyStyle('protection', value);\r\n  }\r\n\r\n  get border() {\r\n    return this.style.border;\r\n  }\r\n\r\n  set border(value) {\r\n    this._applyStyle('border', value);\r\n  }\r\n\r\n  get fill() {\r\n    return this.style.fill;\r\n  }\r\n\r\n  set fill(value) {\r\n    this._applyStyle('fill', value);\r\n  }\r\n\r\n  // =============================================================================\r\n  // static functions\r\n\r\n  static toModel(columns) {\r\n    // Convert array of Column into compressed list cols\r\n    const cols = [];\r\n    let col = null;\r\n    if (columns) {\r\n      columns.forEach((column, index) => {\r\n        if (column.isDefault) {\r\n          if (col) {\r\n            col = null;\r\n          }\r\n        } else if (!col || !column.equivalentTo(col)) {\r\n          col = {\r\n            min: index + 1,\r\n            max: index + 1,\r\n            width: column.width !== undefined ? column.width : DEFAULT_COLUMN_WIDTH,\r\n            style: column.style,\r\n            isCustomWidth: column.isCustomWidth,\r\n            hidden: column.hidden,\r\n            outlineLevel: column.outlineLevel,\r\n            collapsed: column.collapsed,\r\n          };\r\n          cols.push(col);\r\n        } else {\r\n          col.max = index + 1;\r\n        }\r\n      });\r\n    }\r\n    return cols.length ? cols : undefined;\r\n  }\r\n\r\n  static fromModel(worksheet, cols) {\r\n    cols = cols || [];\r\n    const columns = [];\r\n    let count = 1;\r\n    let index = 0;\r\n    while (index < cols.length) {\r\n      const col = cols[index++];\r\n      while (count < col.min) {\r\n        columns.push(new Column(worksheet, count++));\r\n      }\r\n      while (count <= col.max) {\r\n        columns.push(new Column(worksheet, count++, col));\r\n      }\r\n    }\r\n    return columns.length ? columns : null;\r\n  }\r\n}\r\n\r\nmodule.exports = Column;\r\n"],"file":"column.js"}