{"version":3,"sources":["../../../lib/csv/csv.js"],"names":["fs","require","fastCsv","customParseFormat","utc","dayjs","extend","StreamBuf","exists","SpecialValues","true","false","error","CSV","workbook","worksheet","filename","options","Error","stream","createReadStream","read","close","Promise","resolve","reject","addWorksheet","sheetName","dateFormats","map","datum","datumNumber","Number","isNaN","Infinity","dt","reduce","matchingDate","currentDateFormat","dayjsObj","isValid","Date","valueOf","special","undefined","csvStream","parse","parserOptions","on","data","addRow","emit","pipe","getWorksheet","sheetId","format","formatterOptions","dateFormat","dateUTC","value","text","hyperlink","formula","result","JSON","stringify","includeEmptyRows","lastRow","eachRow","row","rowNumber","write","values","shift","end","streamOptions","encoding","createWriteStream","module","exports"],"mappings":"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","sourcesContent":["const fs = require('fs');\r\nconst fastCsv = require('fast-csv');\r\nconst customParseFormat = require('dayjs/plugin/customParseFormat');\r\nconst utc = require('dayjs/plugin/utc');\r\nconst dayjs = require('dayjs').extend(customParseFormat).extend(utc);\r\nconst StreamBuf = require('../utils/stream-buf');\r\n\r\nconst {\r\n  fs: {exists},\r\n} = require('../utils/utils');\r\n\r\n/* eslint-disable quote-props */\r\nconst SpecialValues = {\r\n  true: true,\r\n  false: false,\r\n  '#N/A': {error: '#N/A'},\r\n  '#REF!': {error: '#REF!'},\r\n  '#NAME?': {error: '#NAME?'},\r\n  '#DIV/0!': {error: '#DIV/0!'},\r\n  '#NULL!': {error: '#NULL!'},\r\n  '#VALUE!': {error: '#VALUE!'},\r\n  '#NUM!': {error: '#NUM!'},\r\n};\r\n/* eslint-ensable quote-props */\r\n\r\nclass CSV {\r\n  constructor(workbook) {\r\n    this.workbook = workbook;\r\n    this.worksheet = null;\r\n  }\r\n\r\n  async readFile(filename, options) {\r\n    options = options || {};\r\n    if (!(await exists(filename))) {\r\n      throw new Error(`File not found: ${filename}`);\r\n    }\r\n    const stream = fs.createReadStream(filename);\r\n    const worksheet = await this.read(stream, options);\r\n    stream.close();\r\n    return worksheet;\r\n  }\r\n\r\n  read(stream, options) {\r\n    options = options || {};\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const worksheet = this.workbook.addWorksheet(options.sheetName);\r\n\r\n      const dateFormats = options.dateFormats || [\r\n        'YYYY-MM-DD[T]HH:mm:ssZ',\r\n        'YYYY-MM-DD[T]HH:mm:ss',\r\n        'MM-DD-YYYY',\r\n        'YYYY-MM-DD',\r\n      ];\r\n      const map =\r\n        options.map ||\r\n        function(datum) {\r\n          if (datum === '') {\r\n            return null;\r\n          }\r\n          const datumNumber = Number(datum);\r\n          if (!Number.isNaN(datumNumber) && datumNumber !== Infinity) {\r\n            return datumNumber;\r\n          }\r\n          const dt = dateFormats.reduce((matchingDate, currentDateFormat) => {\r\n            if (matchingDate) {\r\n              return matchingDate;\r\n            }\r\n            const dayjsObj = dayjs(datum, currentDateFormat, true);\r\n            if (dayjsObj.isValid()) {\r\n              return dayjsObj;\r\n            }\r\n            return null;\r\n          }, null);\r\n          if (dt) {\r\n            return new Date(dt.valueOf());\r\n          }\r\n          const special = SpecialValues[datum];\r\n          if (special !== undefined) {\r\n            return special;\r\n          }\r\n          return datum;\r\n        };\r\n\r\n      const csvStream = fastCsv\r\n        .parse(options.parserOptions)\r\n        .on('data', data => {\r\n          worksheet.addRow(data.map(map));\r\n        })\r\n        .on('end', () => {\r\n          csvStream.emit('worksheet', worksheet);\r\n        });\r\n\r\n      csvStream.on('worksheet', resolve).on('error', reject);\r\n\r\n      stream.pipe(csvStream);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @deprecated since version 4.0. You should use `CSV#read` instead. Please follow upgrade instruction: https://github.com/exceljs/exceljs/blob/master/UPGRADE-4.0.md\r\n   */\r\n  createInputStream() {\r\n    throw new Error(\r\n      '`CSV#createInputStream` is deprecated. You should use `CSV#read` instead. This method will be removed in version 5.0. Please follow upgrade instruction: https://github.com/exceljs/exceljs/blob/master/UPGRADE-4.0.md'\r\n    );\r\n  }\r\n\r\n  write(stream, options) {\r\n    return new Promise((resolve, reject) => {\r\n      options = options || {};\r\n      // const encoding = options.encoding || 'utf8';\r\n      // const separator = options.separator || ',';\r\n      // const quoteChar = options.quoteChar || '\\'';\r\n\r\n      const worksheet = this.workbook.getWorksheet(options.sheetName || options.sheetId);\r\n\r\n      const csvStream = fastCsv.format(options.formatterOptions);\r\n      stream.on('finish', () => {\r\n        resolve();\r\n      });\r\n      csvStream.on('error', reject);\r\n      csvStream.pipe(stream);\r\n\r\n      const {dateFormat, dateUTC} = options;\r\n      const map =\r\n        options.map ||\r\n        (value => {\r\n          if (value) {\r\n            if (value.text || value.hyperlink) {\r\n              return value.hyperlink || value.text || '';\r\n            }\r\n            if (value.formula || value.result) {\r\n              return value.result || '';\r\n            }\r\n            if (value instanceof Date) {\r\n              if (dateFormat) {\r\n                return dateUTC\r\n                  ? dayjs.utc(value).format(dateFormat)\r\n                  : dayjs(value).format(dateFormat);\r\n              }\r\n              return dateUTC ? dayjs.utc(value).format() : dayjs(value).format();\r\n            }\r\n            if (value.error) {\r\n              return value.error;\r\n            }\r\n            if (typeof value === 'object') {\r\n              return JSON.stringify(value);\r\n            }\r\n          }\r\n          return value;\r\n        });\r\n\r\n      const includeEmptyRows = options.includeEmptyRows === undefined || options.includeEmptyRows;\r\n      let lastRow = 1;\r\n      if (worksheet) {\r\n        worksheet.eachRow((row, rowNumber) => {\r\n          if (includeEmptyRows) {\r\n            while (lastRow++ < rowNumber - 1) {\r\n              csvStream.write([]);\r\n            }\r\n          }\r\n          const {values} = row;\r\n          values.shift();\r\n          csvStream.write(values.map(map));\r\n          lastRow = rowNumber;\r\n        });\r\n      }\r\n      csvStream.end();\r\n    });\r\n  }\r\n\r\n  writeFile(filename, options) {\r\n    options = options || {};\r\n\r\n    const streamOptions = {\r\n      encoding: options.encoding || 'utf8',\r\n    };\r\n    const stream = fs.createWriteStream(filename, streamOptions);\r\n\r\n    return this.write(stream, options);\r\n  }\r\n\r\n  async writeBuffer(options) {\r\n    const stream = new StreamBuf();\r\n    await this.write(stream, options);\r\n    return stream.read();\r\n  }\r\n}\r\n\r\nmodule.exports = CSV;\r\n"],"file":"csv.js"}