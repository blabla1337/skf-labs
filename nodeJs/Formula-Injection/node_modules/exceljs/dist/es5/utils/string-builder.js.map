{"version":3,"sources":["../../../lib/utils/string-builder.js"],"names":["StringBuilder","reset","_buf","join","position","length","pop","text","push","inBuf","toString","module","exports"],"mappings":";;;;;;;;AAAA;AACA;IACMA,a;AACJ,2BAAc;AAAA;;AACZ,SAAKC,KAAL;AACD;;;;+BAMU;AACT,aAAO,KAAKC,IAAL,CAAUC,IAAV,CAAe,EAAf,CAAP;AACD;;;0BAEKC,Q,EAAU;AACd,UAAIA,QAAJ,EAAc;AACZ,eAAO,KAAKF,IAAL,CAAUG,MAAV,GAAmBD,QAA1B,EAAoC;AAClC,eAAKF,IAAL,CAAUI,GAAV;AACD;AACF,OAJD,MAIO;AACL,aAAKJ,IAAL,GAAY,EAAZ;AACD;AACF;;;4BAEOK,I,EAAM;AACZ,WAAKL,IAAL,CAAUM,IAAV,CAAeD,IAAf;AACD;;;iCAEYE,K,EAAO;AAClB,WAAKP,IAAL,CAAUM,IAAV,CAAeC,KAAK,CAACC,QAAN,EAAf;AACD;;;wBAxBY;AACX,aAAO,KAAKR,IAAL,CAAUG,MAAjB;AACD;;;;;;AAyBHM,MAAM,CAACC,OAAP,GAAiBZ,aAAjB","sourcesContent":["// StringBuilder - a way to keep string memory operations to a minimum\r\n// while building the strings for the xml files\r\nclass StringBuilder {\r\n  constructor() {\r\n    this.reset();\r\n  }\r\n\r\n  get length() {\r\n    return this._buf.length;\r\n  }\r\n\r\n  toString() {\r\n    return this._buf.join('');\r\n  }\r\n\r\n  reset(position) {\r\n    if (position) {\r\n      while (this._buf.length > position) {\r\n        this._buf.pop();\r\n      }\r\n    } else {\r\n      this._buf = [];\r\n    }\r\n  }\r\n\r\n  addText(text) {\r\n    this._buf.push(text);\r\n  }\r\n\r\n  addStringBuf(inBuf) {\r\n    this._buf.push(inBuf.toString());\r\n  }\r\n}\r\n\r\nmodule.exports = StringBuilder;\r\n"],"file":"string-builder.js"}