{"version":3,"sources":["../../../lib/utils/cell-matrix.js"],"names":["_","require","colCache","CellMatrix","template","sheets","addressStr","addCellEx","decodeEx","findCellEx","sheetName","rowNumber","colNumber","sheet","row","address","top","bottom","col","left","right","getCellAt","create","findSheet","findSheetRow","findRowCell","cell","n2l","callback","forEach","each","forEachInSheet","results","push","name","undefined","Object","assign","JSON","parse","stringify","start","numDelete","numInsert","inserts","i","splice","module","exports"],"mappings":"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","sourcesContent":["const _ = require('./under-dash');\r\nconst colCache = require('./col-cache');\r\n\r\nclass CellMatrix {\r\n  constructor(template) {\r\n    this.template = template;\r\n    this.sheets = {};\r\n  }\r\n\r\n  addCell(addressStr) {\r\n    this.addCellEx(colCache.decodeEx(addressStr));\r\n  }\r\n\r\n  getCell(addressStr) {\r\n    return this.findCellEx(colCache.decodeEx(addressStr), true);\r\n  }\r\n\r\n  findCell(addressStr) {\r\n    return this.findCellEx(colCache.decodeEx(addressStr), false);\r\n  }\r\n\r\n  findCellAt(sheetName, rowNumber, colNumber) {\r\n    const sheet = this.sheets[sheetName];\r\n    const row = sheet && sheet[rowNumber];\r\n    return row && row[colNumber];\r\n  }\r\n\r\n  addCellEx(address) {\r\n    if (address.top) {\r\n      for (let row = address.top; row <= address.bottom; row++) {\r\n        for (let col = address.left; col <= address.right; col++) {\r\n          this.getCellAt(address.sheetName, row, col);\r\n        }\r\n      }\r\n    } else {\r\n      this.findCellEx(address, true);\r\n    }\r\n  }\r\n\r\n  getCellEx(address) {\r\n    return this.findCellEx(address, true);\r\n  }\r\n\r\n  findCellEx(address, create) {\r\n    const sheet = this.findSheet(address, create);\r\n    const row = this.findSheetRow(sheet, address, create);\r\n    return this.findRowCell(row, address, create);\r\n  }\r\n\r\n  getCellAt(sheetName, rowNumber, colNumber) {\r\n    const sheet = this.sheets[sheetName] || (this.sheets[sheetName] = []);\r\n    const row = sheet[rowNumber] || (sheet[rowNumber] = []);\r\n    const cell =\r\n      row[colNumber] ||\r\n      (row[colNumber] = {\r\n        sheetName,\r\n        address: colCache.n2l(colNumber) + rowNumber,\r\n        row: rowNumber,\r\n        col: colNumber,\r\n      });\r\n    return cell;\r\n  }\r\n\r\n  removeCellEx(address) {\r\n    const sheet = this.findSheet(address);\r\n    if (!sheet) {\r\n      return;\r\n    }\r\n    const row = this.findSheetRow(sheet, address);\r\n    if (!row) {\r\n      return;\r\n    }\r\n    delete row[address.col];\r\n  }\r\n\r\n  forEachInSheet(sheetName, callback) {\r\n    const sheet = this.sheets[sheetName];\r\n    if (sheet) {\r\n      sheet.forEach((row, rowNumber) => {\r\n        if (row) {\r\n          row.forEach((cell, colNumber) => {\r\n            if (cell) {\r\n              callback(cell, rowNumber, colNumber);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  forEach(callback) {\r\n    _.each(this.sheets, (sheet, sheetName) => {\r\n      this.forEachInSheet(sheetName, callback);\r\n    });\r\n  }\r\n\r\n  map(callback) {\r\n    const results = [];\r\n    this.forEach(cell => {\r\n      results.push(callback(cell));\r\n    });\r\n    return results;\r\n  }\r\n\r\n  findSheet(address, create) {\r\n    const name = address.sheetName;\r\n    if (this.sheets[name]) {\r\n      return this.sheets[name];\r\n    }\r\n    if (create) {\r\n      return (this.sheets[name] = []);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  findSheetRow(sheet, address, create) {\r\n    const {row} = address;\r\n    if (sheet && sheet[row]) {\r\n      return sheet[row];\r\n    }\r\n    if (create) {\r\n      return (sheet[row] = []);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  findRowCell(row, address, create) {\r\n    const {col} = address;\r\n    if (row && row[col]) {\r\n      return row[col];\r\n    }\r\n    if (create) {\r\n      return (row[col] = this.template\r\n        ? Object.assign(address, JSON.parse(JSON.stringify(this.template)))\r\n        : address);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  spliceRows(sheetName, start, numDelete, numInsert) {\r\n    const sheet = this.sheets[sheetName];\r\n    if (sheet) {\r\n      const inserts = [];\r\n      for (let i = 0; i < numInsert; i++) {\r\n        inserts.push([]);\r\n      }\r\n      sheet.splice(start, numDelete, ...inserts);\r\n    }\r\n  }\r\n\r\n  spliceColumns(sheetName, start, numDelete, numInsert) {\r\n    const sheet = this.sheets[sheetName];\r\n    if (sheet) {\r\n      const inserts = [];\r\n      for (let i = 0; i < numInsert; i++) {\r\n        inserts.push(null);\r\n      }\r\n      _.each(sheet, row => {\r\n        row.splice(start, numDelete, ...inserts);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = CellMatrix;\r\n"],"file":"cell-matrix.js"}